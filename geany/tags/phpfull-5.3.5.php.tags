# format=pipe
# PHP 5.3.5 internal functions
# Based on PHP documentation page: http://php.net/quickref.php 
abs|Absolute value -|number(mixed $number)|
acos|Arc cosine -|float(float $arg)|
acosh|Inverse hyperbolic cosine -|float(float $arg)|
addcslashes|Quote string with slashes in a C style -|string(string $str , string $charlist)|
addslashes|Quote string with slashes -|string(string $str)|
array_change_key_case|Changes all keys in an array -|array(array $input [, int $case = CASE_LOWER ])|
array_chunk|Split an array into chunks -|array(array $input , int $size [, bool $preserve_keys = false ])|
array_combine|Creates an array by using one array for keys and another for its values -|array(array $keys , array $values)|
array_count_values|Counts all the values of an array -|array(array $input)|
array_diff|Computes the difference of arrays -|array(array $array1 , array $array2 [, array $... ])|
array_diff_assoc|Computes the difference of arrays with additional index check -|array(array $array1 , array $array2 [, array $... ])|
array_diff_key|Computes the difference of arrays using keys for comparison -|array(array $array1 , array $array2 [, array $... ])|
array_diff_uassoc|Computes the difference of arrays with additional index check which is performed by a user supplied callback function -|array(array $array1 , array $array2 [, array $... ], callback $key_compare_func)|
array_diff_ukey|Computes the difference of arrays using a callback function on the keys for comparison -|array(array $array1 , array $array2 [, array $ ... ], callback $key_compare_func)|
array_fill|Fill an array with values -|array(int $start_index , int $num , mixed $value)|
array_fill_keys|Fill an array with values, specifying keys -|array(array $keys , mixed $value)|
array_filter|Filters elements of an array using a callback function -|array(array $input [, callback $callback ])|
array_flip|Exchanges all keys with their associated values in an array -|array(array $trans)|
array_intersect|Computes the intersection of arrays -|array(array $array1 , array $array2 [, array $ ... ])|
array_intersect_assoc|Computes the intersection of arrays with additional index check -|array(array $array1 , array $array2 [, array $ ... ])|
array_intersect_key|Computes the intersection of arrays using keys for comparison -|array(array $array1 , array $array2 [, array $ ... ])|
array_intersect_uassoc|Computes the intersection of arrays with additional index check, compares indexes by a callback function -|array(array $array1 , array $array2 [, array $ ... ], callback $key_compare_func)|
array_intersect_ukey|Computes the intersection of arrays using a callback function on the keys for comparison -|array(array $array1 , array $array2 [, array $... ], callback $key_compare_func)|
array_key_exists|Checks if the given key or index exists in the array -|bool(mixed $key , array $search)|
array_keys|Return all the keys or a subset of the keys of an array -|array(array $input [, mixed $search_value [, bool $strict = false ]])|
array_map|Applies the callback to the elements of the given arrays -|array(callback $callback , array $arr1 [, array $... ])|
array_merge|Merge one or more arrays -|array(array $array1 [, array $... ])|
array_merge_recursive|Merge two or more arrays recursively -|array(array $array1 [, array $... ])|
array_multisort|Sort multiple or multi-dimensional arrays -|bool(array &$arr [, mixed $arg = SORT_ASC [, mixed $arg = SORT_REGULAR [, mixed $... ]]])|
array_pad|Pad array to the specified length with a value -|array(array $input , int $pad_size , mixed $pad_value)|
array_pop|Pop the element off the end of array -|mixed(array &$array)|
array_product|Calculate the product of values in an array -|number(array $array)|
array_push|Push one or more elements onto the end of array -|int(array &$array , mixed $var [, mixed $... ])|
array_rand|Pick one or more random entries out of an array -|mixed(array $input [, int $num_req = 1 ])|
array_reduce|Iteratively reduce the array to a single value using a callback function -|mixed(array $input , callback $function [, mixed $initial = NULL ])|
array_replace|Replaces elements from passed arrays into the first array -|array(array &$array , array &$array1 [, array &$... ])|
array_replace_recursive|Replaces elements from passed arrays into the first array recursively -|array(array &$array , array &$array1 [, array &$... ])|
array_reverse|Return an array with elements in reverse order -|array(array $array [, bool $preserve_keys = false ])|
array_search|Searches the array for a given value and returns the corresponding key if successful -|mixed(mixed $needle , array $haystack [, bool $strict = false ])|
array_shift|Shift an element off the beginning of array -|mixed(array &$array)|
array_slice|Extract a slice of the array -|array(array $array , int $offset [, int $length [, bool $preserve_keys = false ]])|
array_splice|Remove a portion of the array and replace it with something else -|array(array &$input , int $offset [, int $length = 0 [, mixed $replacement ]])|
array_sum|Calculate the sum of values in an array -|number(array $array)|
array_udiff|Computes the difference of arrays by using a callback function for data comparison -|array(array $array1 , array $array2 [, array $ ... ], callback $data_compare_func)|
array_udiff_assoc|Computes the difference of arrays with additional index check, compares data by a callback function -|array(array $array1 , array $array2 [, array $ ... ], callback $data_compare_func)|
array_udiff_uassoc|Computes the difference of arrays with additional index check, compares data and indexes by a callback function -|array(array $array1 , array $array2 [, array $ ... ], callback $data_compare_func , callback $key_compare_func)|
array_uintersect|Computes the intersection of arrays, compares data by a callback function -|array(array $array1 , array $array2 [, array $ ... ], callback $data_compare_func)|
array_uintersect_assoc|Computes the intersection of arrays with additional index check, compares data by a callback function -|array(array $array1 , array $array2 [, array $ ... ], callback $data_compare_func)|
array_uintersect_uassoc|Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions -|array(array $array1 , array $array2 [, array $ ... ], callback $data_compare_func , callback $key_compare_func)|
array_unique|Removes duplicate values from an array -|array(array $array [, int $sort_flags = SORT_STRING ])|
array_unshift|Prepend one or more elements to the beginning of an array -|int(array &$array , mixed $var [, mixed $... ])|
array_values|Return all the values of an array -|array(array $input)|
array_walk|Apply a user function to every member of an array -|bool(array &$array , callback $funcname [, mixed $userdata ])|
array_walk_recursive|Apply a user function recursively to every member of an array -|bool(array &$input , callback $funcname [, mixed $userdata ])|
arsort|Sort an array in reverse order and maintain index association -|bool(array &$array [, int $sort_flags = SORT_REGULAR ])|
asin|Arc sine -|float(float $arg)|
asinh|Inverse hyperbolic sine -|float(float $arg)|
asort|Sort an array and maintain index association -|bool(array &$array [, int $sort_flags = SORT_REGULAR ])|
assert|Checks if assertion is FALSE -|bool(mixed $assertion)|
assert_options|Set/get the various assert flags -|mixed(int $what [, mixed $value ])|
atan|Arc tangent -|float(float $arg)|
atan2|Arc tangent of two variables -|float(float $y , float $x)|
atanh|Inverse hyperbolic tangent -|float(float $arg)|
base64_decode|Decodes data encoded with MIME base64 -|string(string $data [, bool $strict = false ])|
base64_encode|Encodes data with MIME base64 -|string(string $data)|
base_convert|Convert a number between arbitrary bases -|string(string $number , int $frombase , int $tobase)|
basename|Returns trailing name component of path -|string(string $path [, string $suffix ])|
bcadd|Add two arbitrary precision numbers -|string(string $left_operand , string $right_operand [, int $scale ])|
bccomp|Compare two arbitrary precision numbers -|int(string $left_operand , string $right_operand [, int $scale ])|
bcdiv|Divide two arbitrary precision numbers -|string(string $left_operand , string $right_operand [, int $scale ])|
bcmod|Get modulus of an arbitrary precision number -|string(string $left_operand , string $modulus)|
bcmul|Multiply two arbitrary precision number -|string(string $left_operand , string $right_operand [, int $scale ])|
bcpow|Raise an arbitrary precision number to another -|string(string $left_operand , string $right_operand [, int $scale ])|
bcpowmod|Raise an arbitrary precision number to another, reduced by a specified modulus -|string(string $left_operand , string $right_operand , string $modulus [, int $scale ])|
bcscale|Set default scale parameter for all bc math functions -|bool(int $scale)|
bcsqrt|Get the square root of an arbitrary precision number -|string(string $operand [, int $scale ])|
bcsub|Subtract one arbitrary precision number from another -|string(string $left_operand , string $right_operand [, int $scale ])|
bin2hex|Convert binary data into hexadecimal representation -|string(string $str)|
bind_textdomain_codeset|Specify the character encoding in which the messages from the DOMAIN message catalog will be returned -|string(string $domain , string $codeset)|
bindec|Binary to decimal -|number(string $binary_string)|
bindtextdomain|Sets the path for a domain -|string(string $domain , string $directory)|
bzclose|Close a bzip2 file -|int(resource $bz)|
bzcompress|Compress a string into bzip2 encoded data -|mixed(string $source [, int $blocksize = 4 [, int $workfactor = 0 ]])|
bzdecompress|Decompresses bzip2 encoded data -|mixed(string $source [, int $small = 0 ])|
bzerrno|Returns a bzip2 error number -|int(resource $bz)|
bzerror|    Returns the bzip2 error number and error string in an array    -|array(resource $bz)|
bzerrstr|Returns a bzip2 error string -|string(resource $bz)|
bzflush|Force a write of all buffered data -|int(resource $bz)|
bzopen|Opens a bzip2 compressed file -|resource(string $filename , string $mode)|
bzread|Binary safe bzip2 file read -|string(resource $bz [, int $length = 1024 ])|
bzwrite|Binary safe bzip2 file write -|int(resource $bz , string $data [, int $length ])|
cal_days_in_month|Return the number of days in a month for a given year and calendar -|int(int $calendar , int $month , int $year)|
cal_from_jd|Converts from Julian Day Count to a supported calendar -|array(int $jd , int $calendar)|
cal_info|Returns information about a particular calendar -|array([ int $calendar = -1 ])|
cal_to_jd|Converts from a supported calendar to Julian Day Count -|int(int $calendar , int $month , int $day , int $year)|
call_user_func|Call a user function given by the first parameter -|mixed(callback $function [, mixed $parameter [, mixed $... ]])|
call_user_func_array|Call a user function given with an array of parameters -|mixed(callback $function , array $param_arr)|
call_user_method|Call a user method on an specific object [deprecated] -|mixed(string $method_name , object &$obj [, mixed $parameter [, mixed $... ]])|
call_user_method_array|Call a user method given with an array of parameters [deprecated] -|mixed(string $method_name , object &$obj , array $params)|
ceil|Round fractions up -|float(float $value)|
chdir|Change directory -|bool(string $directory)|
checkdate|Validate a Gregorian date -|bool(int $month , int $day , int $year)|
checkdnsrr|Check DNS records corresponding to a given Internet host name or IP address -|bool(string $host [, string $type = &quot;MX&quot; ])|
chgrp|Changes file group -|bool(string $filename , mixed $group)|
chmod|Changes file mode -|bool(string $filename , int $mode)|
chop|Alias of rtrim() -||
chown|Changes file owner -|bool(string $filename , mixed $user)|
chr|Return a specific character -|string(int $ascii)|
chunk_split|Split a string into smaller chunks -|string(string $body [, int $chunklen = 76 [, string $end = &quot;\r\n&quot; ]])|
class_alias|Creates an alias for a class -|bool([ string $original [, string $alias ]])|
class_exists|Checks if the class has been defined -|bool(string $class_name [, bool $autoload = true ])|
class_implements|    Return the interfaces which are implemented by the given class    -|array(mixed $class [, bool $autoload = true ])|
class_parents|    Return the parent classes of the given class    -|array(mixed $class [, bool $autoload = true ])|
clearstatcache|Clears file status cache -|void([ bool $clear_realpath_cache = false [, string $filename ]])|
closedir|Close directory handle -|void([ resource $dir_handle ])|
closelog|Close connection to system logger -|bool(void)|
compact|Create array containing variables and their values -|array(mixed $varname [, mixed $... ])|
connection_aborted|Check whether client disconnected -|int(void)|
connection_status|Returns connection status bitfield -|int(void)|
constant|Returns the value of a constant -|mixed(string $name)|
convert_cyr_string|Convert from one Cyrillic character set to another -|string(string $str , string $from , string $to)|
convert_uudecode|Decode a uuencoded string -|string(string $data)|
convert_uuencode|Uuencode a string -|string(string $data)|
copy|Copies file -|bool(string $source , string $dest [, resource $context ])|
cos|Cosine -|float(float $arg)|
cosh|Hyperbolic cosine -|float(float $arg)|
count|Count all elements in an array, or something in an object -|int(mixed $var [, int $mode = COUNT_NORMAL ])|
count_chars|Return information about characters used in a string -|mixed(string $string [, int $mode = 0 ])|
crc32|Calculates the crc32 polynomial of a string -|int(string $str)|
create_function|Create an anonymous (lambda-style) function -|string(string $args , string $code)|
crypt|One-way string hashing -|string(string $str [, string $salt ])|
ctype_alnum|Check for alphanumeric character(s) -|bool(string $text)|
ctype_alpha|Check for alphabetic character(s) -|bool(string $text)|
ctype_cntrl|Check for control character(s) -|bool(string $text)|
ctype_digit|Check for numeric character(s) -|bool(string $text)|
ctype_graph|Check for any printable character(s) except space -|bool(string $text)|
ctype_lower|Check for lowercase character(s) -|bool(string $text)|
ctype_print|Check for printable character(s) -|bool(string $text)|
ctype_punct|    Check for any printable character which is not whitespace or an    alphanumeric character    -|bool(string $text)|
ctype_space|Check for whitespace character(s) -|bool(string $text)|
ctype_upper|Check for uppercase character(s) -|bool(string $text)|
ctype_xdigit|    Check for character(s) representing a hexadecimal digit    -|bool(string $text)|
curl_close|Close a cURL session -|void(resource $ch)|
curl_copy_handle|Copy a cURL handle along with all of its preferences -|resource(resource $ch)|
curl_errno|Return the last error number -|int(resource $ch)|
curl_error|Return a string containing the last error for the current session -|string(resource $ch)|
curl_exec|Perform a cURL session -|mixed(resource $ch)|
curl_getinfo|Get information regarding a specific transfer -|mixed(resource $ch [, int $opt = 0 ])|
curl_init|Initialize a cURL session -|resource([ string $url = NULL ])|
curl_multi_add_handle|Add a normal cURL handle to a cURL multi handle -|int(resource $mh , resource $ch)|
curl_multi_close|Close a set of cURL handles -|void(resource $mh)|
curl_multi_exec|Run the sub-connections of the current cURL handle -|int(resource $mh , int &$still_running)|
curl_multi_getcontent|Return the content of a cURL handle if CURLOPT_RETURNTRANSFER is set -|string(resource $ch)|
curl_multi_info_read|Get information about the current transfers -|array(resource $mh [, int &$msgs_in_queue = NULL ])|
curl_multi_init|Returns a new cURL multi handle -|resource(void)|
curl_multi_remove_handle|Remove a multi handle from a set of cURL handles -|int(resource $mh , resource $ch)|
curl_multi_select|Wait for activity on any curl_multi connection -|int(resource $mh [, float $timeout = 1.0 ])|
curl_setopt|Set an option for a cURL transfer -|bool(resource $ch , int $option , mixed $value)|
curl_setopt_array|Set multiple options for a cURL transfer -|bool(resource $ch , array $options)|
curl_version|Gets cURL version information -|array([ int $age = CURLVERSION_NOW ])|
current|Return the current element in an array -|mixed(array &$array)|
date|Format a local time/date -|string(string $format [, int $timestamp = time() ])|
date_add|Alias of  DateTime::add() -||
date_create|Alias of  DateTime::__construct() -||
date_create_from_format|Alias of  DateTime::createFromFormat() -||
date_date_set|Alias of  DateTime::setDate() -||
date_default_timezone_get|    Gets the default timezone used by all date/time functions in a script    -|string(void)|
date_default_timezone_set|    Sets the default timezone used by all date/time functions in a script    -|bool(string $timezone_identifier)|
date_diff|Alias of  DateTime::diff() -||
date_format|Alias of  DateTime::format() -||
date_get_last_errors|Alias of  DateTime::getLastErrors() -||
date_interval_create_from_date_string|Alias of  DateInterval::createFromDateString() -||
date_interval_format|Alias of  DateInterval::format() -||
date_isodate_set|Alias of  DateTime::setISODate() -||
date_modify|Alias of  DateTime::modify() -||
date_offset_get|Alias of  DateTime::getOffset() -||
date_parse|Returns associative array with detailed info about given date -|array(string $date)|
date_parse_from_format|Get info about given date formatted according to the specified format -|array(string $format , string $date)|
date_sub|Alias of  DateTime::sub() -||
date_sun_info|Returns an array with information about sunset/sunrise and twilight begin/end -|array(int $time , float $latitude , float $longitude)|
date_sunrise|Returns time of sunrise for a given day and location -|mixed(int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get(&quot;date.default_latitude&quot;) [, float $longitude = ini_get(&quot;date.default_longitude&quot;) [, float $zenith = ini_get(&quot;date.sunrise_zenith&quot;) [, float $gmt_offset = 0 ]]]]])|
date_sunset|    Returns time of sunset for a given day and location    -|mixed(int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get(&quot;date.default_latitude&quot;) [, float $longitude = ini_get(&quot;date.default_longitude&quot;) [, float $zenith = ini_get(&quot;date.sunset_zenith&quot;) [, float $gmt_offset = 0 ]]]]])|
date_time_set|Alias of  DateTime::setTime() -||
date_timestamp_get|Alias of  DateTime::getTimestamp() -||
date_timestamp_set|Alias of  DateTime::setTimestamp() -||
date_timezone_get|Alias of  DateTime::getTimezone() -||
date_timezone_set|Alias of  DateTime::setTimezone() -||
dba_close|Close a DBA database -|void(resource $handle)|
dba_delete|Delete DBA entry specified by key -|bool(string $key , resource $handle)|
dba_exists|Check whether key exists -|bool(string $key , resource $handle)|
dba_fetch|Fetch data specified by key -|string(string $key , resource $handle)|
dba_firstkey|Fetch first key -|string(resource $handle)|
dba_handlers|List all the handlers available -|array([ bool $full_info = false ])|
dba_insert|Insert entry -|bool(string $key , string $value , resource $handle)|
dba_key_split|    Splits a key in string representation into array representation    -|mixed(mixed $key)|
dba_list|List all open database files -|array(void)|
dba_nextkey|Fetch next key -|string(resource $handle)|
dba_open|Open database -|resource(string $path , string $mode [, string $handler [, mixed $... ]])|
dba_optimize|Optimize database -|bool(resource $handle)|
dba_popen|Open database persistently -|resource(string $path , string $mode [, string $handler [, mixed $... ]])|
dba_replace|Replace or insert entry -|bool(string $key , string $value , resource $handle)|
dba_sync|Synchronize database -|bool(resource $handle)|
dcgettext|Overrides the domain for a single lookup -|string(string $domain , string $message , int $category)|
dcngettext|Plural version of dcgettext -|string(string $domain , string $msgid1 , string $msgid2 , int $n , int $category)|
debug_backtrace|Generates a backtrace -|array([ int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT [, int $limit = 0 ]])|
debug_print_backtrace|      Prints a backtrace      -|void([ int $options = 0 [, int $limit = 0 ]])|
debug_zval_dump|Dumps a string representation of an internal zend value to output -|void(mixed $variable)|
decbin|Decimal to binary -|string(int $number)|
dechex|Decimal to hexadecimal -|string(int $number)|
decoct|Decimal to octal -|string(int $number)|
define|Defines a named constant -|bool(string $name , mixed $value [, bool $case_insensitive = false ])|
define_syslog_variables|Initializes all syslog related variables -|void(void)|
defined|Checks whether a given named constant exists -|bool(string $name)|
deg2rad|    Converts the number in degrees to the radian equivalent    -|float(float $number)|
dgettext|Override the current domain -|string(string $domain , string $message)|
dirname|Returns parent directory&#039;s path -|string(string $path)|
disk_free_space|Returns available space on filesystem or disk partition -|float(string $directory)|
disk_total_space|Returns the total size of a filesystem or disk partition -|float(string $directory)|
diskfreespace|Alias of disk_free_space() -||
dl|Loads a PHP extension at runtime -|bool(string $library)|
dngettext|Plural version of dgettext -|string(string $domain , string $msgid1 , string $msgid2 , int $n)|
dns_check_record|Alias of checkdnsrr() -||
dns_get_mx|Alias of getmxrr() -||
dns_get_record|Fetch DNS Resource Records associated with a hostname -|array(string $hostname [, int $type = DNS_ANY [, array &$authns [, array &$addtl ]]])|
dom_import_simplexml|    Gets a DOMElement object from a    SimpleXMLElement object    -|DOMElement(SimpleXMLElement $node)|
doubleval|Alias of floatval() -||
each|Return the current key and value pair from an array and advance the array cursor -|array(array &$array)|
easter_date|Get Unix timestamp for midnight on Easter of a given year -|int([ int $year ])|
easter_days|Get number of days after March 21 on which Easter falls for a given year -|int([ int $year [, int $method = CAL_EASTER_DEFAULT ]])|
end|Set the internal pointer of an array to its last element -|mixed(array &$array)|
ereg|Regular expression match -|int(string $pattern , string $string [, array &$regs ])|
ereg_replace|Replace regular expression -|string(string $pattern , string $replacement , string $string)|
eregi|Case insensitive regular expression match -|int(string $pattern , string $string [, array &$regs ])|
eregi_replace|Replace regular expression case insensitive -|string(string $pattern , string $replacement , string $string)|
error_get_last|Get the last occurred error -|array(void)|
error_log|Send an error message somewhere -|bool(string $message [, int $message_type = 0 [, string $destination [, string $extra_headers ]]])|
error_reporting|Sets which PHP errors are reported -|int([ int $level ])|
escapeshellarg|Escape a string to be used as a shell argument -|string(string $arg)|
escapeshellcmd|Escape shell metacharacters -|string(string $command)|
exec|Execute an external program -|string(string $command [, array &$output [, int &$return_var ]])|
exif_imagetype|Determine the type of an image -|int(string $filename)|
exif_read_data|Reads the EXIF headers from JPEG or TIFF -|array(string $filename [, string $sections = NULL [, bool $arrays = false [, bool $thumbnail = false ]]])|
exif_tagname|Get the header name for an index -|string(int $index)|
exif_thumbnail|Retrieve the embedded thumbnail of a TIFF or JPEG image -|string(string $filename [, int &$width [, int &$height [, int &$imagetype ]]])|
exp|Calculates the exponent of e -|float(float $arg)|
explode|Split a string by string -|array(string $delimiter , string $string [, int $limit ])|
expm1|    Returns exp(number) - 1, computed in a way that is accurate even    when the value of number is close to zero    -|float(float $arg)|
extension_loaded|Find out whether an extension is loaded -|bool(string $name)|
extract|Import variables into the current symbol table from an array -|int(array &$var_array [, int $extract_type = EXTR_OVERWRITE [, string $prefix ]])|
ezmlm_hash|Calculate the hash value needed by EZMLM -|int(string $addr)|
fclose|Closes an open file pointer -|bool(resource $handle)|
feof|Tests for end-of-file on a file pointer -|bool(resource $handle)|
fflush|Flushes the output to a file -|bool(resource $handle)|
fgetc|Gets character from file pointer -|string(resource $handle)|
fgetcsv|Gets line from file pointer and parse for CSV fields -|array(resource $handle [, int $length = 0 [, string $delimiter = &#039;,&#039; [, string $enclosure = &#039;&quot;&#039; [, string $escape = &#039;\\&#039; ]]]])|
fgets|Gets line from file pointer -|string(resource $handle [, int $length ])|
fgetss|Gets line from file pointer and strip HTML tags -|string(resource $handle [, int $length [, string $allowable_tags ]])|
file|Reads entire file into an array -|array(string $filename [, int $flags = 0 [, resource $context ]])|
file_exists|Checks whether a file or directory exists -|bool(string $filename)|
file_get_contents|Reads entire file into a string -|string(string $filename [, bool $use_include_path = false [, resource $context [, int $offset = -1 [, int $maxlen ]]]])|
file_put_contents|Write a string to a file -|int(string $filename , mixed $data [, int $flags = 0 [, resource $context ]])|
fileatime|Gets last access time of file -|int(string $filename)|
filectime|Gets inode change time of file -|int(string $filename)|
filegroup|Gets file group -|int(string $filename)|
fileinode|Gets file inode -|int(string $filename)|
filemtime|Gets file modification time -|int(string $filename)|
fileowner|Gets file owner -|int(string $filename)|
fileperms|Gets file permissions -|int(string $filename)|
filesize|Gets file size -|int(string $filename)|
filetype|Gets file type -|string(string $filename)|
filter_has_var|Checks if variable of specified type exists -|bool(int $type , string $variable_name)|
filter_id|Returns the filter ID belonging to a named filter -|int(string $filtername)|
filter_input|Gets a specific external variable by name and optionally filters it -|mixed(int $type , string $variable_name [, int $filter = FILTER_DEFAULT [, mixed $options ]])|
filter_input_array|Gets external variables and optionally filters them -|mixed(int $type [, mixed $definition ])|
filter_list|Returns a list of all supported filters -|array(void)|
filter_var|Filters a variable with a specified filter -|mixed(mixed $variable [, int $filter = FILTER_DEFAULT [, mixed $options ]])|
filter_var_array|Gets multiple variables and optionally filters them -|mixed(array $data [, mixed $definition ])|
finfo_buffer|Return information about a string buffer -|string(resource $finfo , string $string = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]])|
finfo_close|Close fileinfo resource -|bool(resource $finfo)|
finfo_file|Return information about a file -|string(resource $finfo , string $file_name = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]])|
finfo_open|Create a new fileinfo resource -|resource([ int $options = FILEINFO_NONE [, string $magic_file = NULL ]])|
finfo_set_flags|Set libmagic configuration options -|bool(resource $finfo , int $options)|
floatval|Get float value of a variable -|float(mixed $var)|
flock|Portable advisory file locking -|bool(resource $handle , int $operation [, int &$wouldblock ])|
floor|Round fractions down -|float(float $value)|
flush|Flush the output buffer -|void(void)|
fmod|Returns the floating point remainder (modulo) of the division   of the arguments -|float(float $x , float $y)|
fnmatch|Match filename against a pattern -|bool(string $pattern , string $string [, int $flags = 0 ])|
fopen|Opens file or URL -|resource(string $filename , string $mode [, bool $use_include_path = false [, resource $context ]])|
forward_static_call|Call a static method -|mixed(callback $function [, mixed $parameter [, mixed $... ]])|
forward_static_call_array|Call a static method and pass the arguments as array -|mixed(callback $function , array $parameters)|
fpassthru|Output all remaining data on a file pointer -|int(resource $handle)|
fprintf|Write a formatted string to a stream -|int(resource $handle , string $format [, mixed $args [, mixed $... ]])|
fputcsv|Format line as CSV and write to file pointer -|int(resource $handle , array $fields [, string $delimiter = &#039;,&#039; [, string $enclosure = &#039;&quot;&#039; ]])|
fputs|Alias of fwrite() -||
fread|Binary-safe file read -|string(resource $handle , int $length)|
fscanf|Parses input from a file according to a format -|mixed(resource $handle , string $format [, mixed &$... ])|
fseek|Seeks on a file pointer -|int(resource $handle , int $offset [, int $whence = SEEK_SET ])|
fsockopen|Open Internet or Unix domain socket connection -|resource(string $hostname [, int $port = -1 [, int &$errno [, string &$errstr [, float $timeout = ini_get(&quot;default_socket_timeout&quot;) ]]]])|
fstat|Gets information about a file using an open file pointer -|array(resource $handle)|
ftell|Returns the current position of the file read/write pointer -|int(resource $handle)|
ftok|Convert a pathname and a project identifier to a System V IPC key -|int(string $pathname , string $proj)|
ftp_alloc|Allocates space for a file to be uploaded -|bool(resource $ftp_stream , int $filesize [, string &$result ])|
ftp_cdup|Changes to the parent directory -|bool(resource $ftp_stream)|
ftp_chdir|Changes the current directory on a FTP server -|bool(resource $ftp_stream , string $directory)|
ftp_chmod|Set permissions on a file via FTP -|int(resource $ftp_stream , int $mode , string $filename)|
ftp_close|Closes an FTP connection -|bool(resource $ftp_stream)|
ftp_connect|Opens an FTP connection -|resource(string $host [, int $port = 21 [, int $timeout = 90 ]])|
ftp_delete|Deletes a file on the FTP server -|bool(resource $ftp_stream , string $path)|
ftp_exec|Requests execution of a command on the FTP server -|bool(resource $ftp_stream , string $command)|
ftp_fget|Downloads a file from the FTP server and saves to an open file -|bool(resource $ftp_stream , resource $handle , string $remote_file , int $mode [, int $resumepos = 0 ])|
ftp_fput|Uploads from an open file to the FTP server -|bool(resource $ftp_stream , string $remote_file , resource $handle , int $mode [, int $startpos = 0 ])|
ftp_get|Downloads a file from the FTP server -|bool(resource $ftp_stream , string $local_file , string $remote_file , int $mode [, int $resumepos = 0 ])|
ftp_get_option|Retrieves various runtime behaviours of the current FTP stream -|mixed(resource $ftp_stream , int $option)|
ftp_login|Logs in to an FTP connection -|bool(resource $ftp_stream , string $username , string $password)|
ftp_mdtm|Returns the last modified time of the given file -|int(resource $ftp_stream , string $remote_file)|
ftp_mkdir|Creates a directory -|string(resource $ftp_stream , string $directory)|
ftp_nb_continue|Continues retrieving/sending a file (non-blocking) -|int(resource $ftp_stream)|
ftp_nb_fget|Retrieves a file from the FTP server and writes it to an open file (non-blocking) -|int(resource $ftp_stream , resource $handle , string $remote_file , int $mode [, int $resumepos = 0 ])|
ftp_nb_fput|Stores a file from an open file to the FTP server (non-blocking) -|int(resource $ftp_stream , string $remote_file , resource $handle , int $mode [, int $startpos = 0 ])|
ftp_nb_get|Retrieves a file from the FTP server and writes it to a local file (non-blocking) -|int(resource $ftp_stream , string $local_file , string $remote_file , int $mode [, int $resumepos = 0 ])|
ftp_nb_put|Stores a file on the FTP server (non-blocking) -|int(resource $ftp_stream , string $remote_file , string $local_file , int $mode [, int $startpos = 0 ])|
ftp_nlist|Returns a list of files in the given directory -|array(resource $ftp_stream , string $directory)|
ftp_pasv|Turns passive mode on or off -|bool(resource $ftp_stream , bool $pasv)|
ftp_put|Uploads a file to the FTP server -|bool(resource $ftp_stream , string $remote_file , string $local_file , int $mode [, int $startpos = 0 ])|
ftp_pwd|Returns the current directory name -|string(resource $ftp_stream)|
ftp_quit|Alias of ftp_close() -||
ftp_raw|Sends an arbitrary command to an FTP server -|array(resource $ftp_stream , string $command)|
ftp_rawlist|Returns a detailed list of files in the given directory -|array(resource $ftp_stream , string $directory [, bool $recursive = false ])|
ftp_rename|Renames a file or a directory on the FTP server -|bool(resource $ftp_stream , string $oldname , string $newname)|
ftp_rmdir|Removes a directory -|bool(resource $ftp_stream , string $directory)|
ftp_set_option|Set miscellaneous runtime FTP options -|bool(resource $ftp_stream , int $option , mixed $value)|
ftp_site|Sends a SITE command to the server -|bool(resource $ftp_stream , string $command)|
ftp_size|Returns the size of the given file -|int(resource $ftp_stream , string $remote_file)|
ftp_ssl_connect|Opens an Secure SSL-FTP connection -|resource(string $host [, int $port = 21 [, int $timeout = 90 ]])|
ftp_systype|Returns the system type identifier of the remote FTP server -|string(resource $ftp_stream)|
ftruncate|Truncates a file to a given length -|bool(resource $handle , int $size)|
func_get_arg|Return an item from the argument list -|mixed(int $arg_num)|
func_get_args|Returns an array comprising a function&#039;s argument list -|array(void)|
func_num_args|Returns the number of arguments passed to the function -|int(void)|
function_exists|Return TRUE if the given function has been defined -|bool(string $function_name)|
fwrite|Binary-safe file write -|int(resource $handle , string $string [, int $length ])|
gc_collect_cycles|Forces collection of any existing garbage cycles -|int(void)|
gc_disable|Deactivates the circular reference collector -|void(void)|
gc_enable|Activates the circular reference collector -|void(void)|
gc_enabled|Returns status of the circular reference collector -|bool(void)|
gd_info|Retrieve information about the currently installed GD library -|array(void)|
get_browser|Tells what the user&#039;s browser is capable of -|mixed([ string $user_agent [, bool $return_array = false ]])|
get_called_class|the &quot;Late Static Binding&quot; class name -|string(void)|
get_cfg_var|Gets the value of a PHP configuration option -|string(string $option)|
get_class|Returns the name of the class of an object -|string([ object $object = NULL ])|
get_class_methods|Gets the class methods&#039; names -|array(mixed $class_name)|
get_class_vars|Get the default properties of the class -|array(string $class_name)|
get_current_user|Gets the name of the owner of the current PHP script -|string(void)|
get_declared_classes|Returns an array with the name of the defined classes -|array(void)|
get_declared_interfaces|Returns an array of all declared interfaces -|array(void)|
get_defined_constants|Returns an associative array with the names of all the constants and their values -|array([ bool $categorize = false ])|
get_defined_functions|Returns an array of all defined functions -|array(void)|
get_defined_vars|    Returns an array of all defined variables    -|array(void)|
get_extension_funcs|Returns an array with the names of the functions of a module -|array(string $module_name)|
get_headers|Fetches all the headers sent by the server in response to a HTTP request -|array(string $url [, int $format = 0 ])|
get_html_translation_table|Returns the translation table used by htmlspecialchars() and htmlentities() -|array([ int $table = HTML_SPECIALCHARS [, int $quote_style = ENT_COMPAT [, string $charset_hint ]]])|
get_include_path|Gets the current include_path configuration option -|string(void)|
get_included_files|Returns an array with the names of included or required files -|array(void)|
get_loaded_extensions|Returns an array with the names of all modules compiled and loaded -|array([ bool $zend_extensions = false ])|
get_magic_quotes_gpc|Gets the current configuration setting of magic_quotes_gpc -|int(void)|
get_magic_quotes_runtime|Gets the current active configuration setting of magic_quotes_runtime -|int(void)|
get_meta_tags|Extracts all meta tag content attributes from a file and returns an array -|array(string $filename [, bool $use_include_path = false ])|
get_object_vars|Gets the properties of the given object -|array(object $object)|
get_parent_class|Retrieves the parent class name for object or class -|string([ mixed $object ])|
get_required_files|Alias of get_included_files() -||
get_resource_type|    Returns the resource type    -|string(resource $handle)|
getcwd|Gets the current working directory -|string(void)|
getdate|Get date/time information -|array([ int $timestamp = time() ])|
getenv|Gets the value of an environment variable -|string(string $varname)|
gethostbyaddr|    Get the Internet host name corresponding to a given IP address    -|string(string $ip_address)|
gethostbyname|    Get the IPv4 address corresponding to a given Internet host name    -|string(string $hostname)|
gethostbynamel|    Get a list of IPv4 addresses corresponding to a given Internet host    name    -|array(string $hostname)|
gethostname|Gets the host name -|string(void)|
getimagesize|Get the size of an image -|array(string $filename [, array &$imageinfo ])|
getlastmod|Gets time of last page modification -|int(void)|
getmxrr|Get MX records corresponding to a given Internet host name -|bool(string $hostname , array &$mxhosts [, array &$weight ])|
getmygid|Get PHP script owner&#039;s GID -|int(void)|
getmyinode|Gets the inode of the current script -|int(void)|
getmypid|Gets PHP&#039;s process ID -|int(void)|
getmyuid|Gets PHP script owner&#039;s UID -|int(void)|
getopt|Gets options from the command line argument list -|array(string $options [, array $longopts ])|
getprotobyname|Get protocol number associated with protocol name -|int(string $name)|
getprotobynumber|Get protocol name associated with protocol number -|string(int $number)|
getrandmax|Show largest possible random value -|int(void)|
getrusage|Gets the current resource usages -|array([ int $who = 0 ])|
getservbyname|Get port number associated with an Internet service and protocol -|int(string $service , string $protocol)|
getservbyport|Get Internet service which corresponds to port and protocol -|string(int $port , string $protocol)|
gettext|Lookup a message in the current domain -|string(string $message)|
gettimeofday|Get current time -|mixed([ bool $return_float = false ])|
gettype|Get the type of a variable -|string(mixed $var)|
glob|Find pathnames matching a pattern -|array(string $pattern [, int $flags = 0 ])|
gmdate|Format a GMT/UTC date/time -|string(string $format [, int $timestamp = time() ])|
gmmktime|Get Unix timestamp for a GMT date -|int([ int $hour = gmdate(&quot;H&quot;) [, int $minute = gmdate(&quot;i&quot;) [, int $second = gmdate(&quot;s&quot;) [, int $month = gmdate(&quot;n&quot;) [, int $day = gmdate(&quot;j&quot;) [, int $year = gmdate(&quot;Y&quot;) [, int $is_dst = -1 ]]]]]]])|
gmstrftime|Format a GMT/UTC time/date according to locale settings -|string(string $format [, int $timestamp = time() ])|
grapheme_extract|Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8. -|string(string $haystack , int $size [, int $extract_type [, int $start = 0 [, int &$next ]]])|
grapheme_stripos|Find position (in grapheme units) of first occurrence of a case-insensitive string -|int(string $haystack , string $needle [, int $offset = 0 ])|
grapheme_stristr|Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack. -|string(string $haystack , string $needle [, bool $before_needle = false ])|
grapheme_strlen|Get string length in grapheme units -|int(string $input)|
grapheme_strpos|Find position (in grapheme units) of first occurrence of a string -|int(string $haystack , string $needle [, int $offset = 0 ])|
grapheme_strripos|Find position (in grapheme units) of last occurrence of a case-insensitive string -|int(string $haystack , string $needle [, int $offset = 0 ])|
grapheme_strrpos|Find position (in grapheme units) of last occurrence of a string -|int(string $haystack , string $needle [, int $offset = 0 ])|
grapheme_strstr|Returns part of haystack string from the first occurrence of needle to the end of haystack. -|string(string $haystack , string $needle [, bool $before_needle = false ])|
grapheme_substr|Return part of a string -|int(string $string , int $start [, int $length ])|
gzclose|Close an open gz-file pointer -|bool(resource $zp)|
gzcompress|Compress a string -|string(string $data [, int $level = -1 ])|
gzdeflate|Deflate a string -|string(string $data [, int $level = -1 ])|
gzencode|Create a gzip compressed string -|string(string $data [, int $level = -1 [, int $encoding_mode = FORCE_GZIP ]])|
gzeof|Test for EOF on a gz-file pointer -|int(resource $zp)|
gzfile|Read entire gz-file into an array -|array(string $filename [, int $use_include_path = 0 ])|
gzgetc|Get character from gz-file pointer -|string(resource $zp)|
gzgets|Get line from file pointer -|string(resource $zp , int $length)|
gzgetss|    Get line from gz-file pointer and strip HTML tags    -|string(resource $zp , int $length [, string $allowable_tags ])|
gzinflate|Inflate a deflated string -|string(string $data [, int $length = 0 ])|
gzopen|Open gz-file -|resource(string $filename , string $mode [, int $use_include_path = 0 ])|
gzpassthru|    Output all remaining data on a gz-file pointer    -|int(resource $zp)|
gzputs|Alias of gzwrite() -||
gzread|Binary-safe gz-file read -|string(resource $zp , int $length)|
gzrewind|Rewind the position of a gz-file pointer -|bool(resource $zp)|
gzseek|Seek on a gz-file pointer -|int(resource $zp , int $offset [, int $whence = SEEK_SET ])|
gztell|Tell gz-file pointer read/write position -|int(resource $zp)|
gzuncompress|Uncompress a compressed string -|string(string $data [, int $length = 0 ])|
gzwrite|Binary-safe gz-file write -|int(resource $zp , string $string [, int $length ])|
hash|Generate a hash value (message digest) -|string(string $algo , string $data [, bool $raw_output = false ])|
hash_algos|Return a list of registered hashing algorithms -|array(void)|
hash_copy|Copy hashing context -|resource(resource $context)|
hash_file|Generate a hash value using the contents of a given file -|string(string $algo , string $filename [, bool $raw_output = false ])|
hash_final|Finalize an incremental hash and return resulting digest -|string(resource $context [, bool $raw_output = false ])|
hash_hmac|Generate a keyed hash value using the HMAC method -|string(string $algo , string $data , string $key [, bool $raw_output = false ])|
hash_hmac_file|Generate a keyed hash value using the HMAC method and the contents of a given file -|string(string $algo , string $filename , string $key [, bool $raw_output = false ])|
hash_init|Initialize an incremental hashing context -|resource(string $algo [, int $options = 0 [, string $key = NULL ]])|
hash_update|Pump data into an active hashing context -|bool(resource $context , string $data)|
hash_update_file|Pump data into an active hashing context from a file -|bool(resource $context , string $filename [, resource $context = NULL ])|
hash_update_stream|Pump data into an active hashing context from an open stream -|int(resource $context , resource $handle [, int $length = -1 ])|
header|Send a raw HTTP header -|void(string $string [, bool $replace = true [, int $http_response_code ]])|
header_remove|Remove previously set headers -|void([ string $name ])|
headers_list|Returns a list of response headers sent (or ready to send) -|array(void)|
headers_sent|Checks if or where headers have been sent -|bool([ string &$file [, int &$line ]])|
hebrev|Convert logical Hebrew text to visual text -|string(string $hebrew_text [, int $max_chars_per_line = 0 ])|
hebrevc|Convert logical Hebrew text to visual text with newline conversion -|string(string $hebrew_text [, int $max_chars_per_line = 0 ])|
hexdec|Hexadecimal to decimal -|number(string $hex_string)|
highlight_file|Syntax highlighting of a file -|mixed(string $filename [, bool $return = false ])|
highlight_string|Syntax highlighting of a string -|mixed(string $str [, bool $return = false ])|
html_entity_decode|Convert all HTML entities to their applicable characters -|string(string $string [, int $quote_style = ENT_COMPAT [, string $charset = &#039;UTF-8&#039; ]])|
htmlentities|Convert all applicable characters to HTML entities -|string(string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $charset [, bool $double_encode = true ]]])|
htmlspecialchars|Convert special characters to HTML entities -|string(string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $charset [, bool $double_encode = true ]]])|
htmlspecialchars_decode|    Convert special HTML entities back to characters    -|string(string $string [, int $quote_style = ENT_COMPAT ])|
http_build_query|Generate URL-encoded query string -|string(mixed $query_data [, string $numeric_prefix [, string $arg_separator [, int $enc_type = PHP_QUERY_RFC1738 ]]])|
hypot|    Calculate the length of the hypotenuse of a right-angle triangle    -|float(float $x , float $y)|
iconv|Convert string to requested character encoding -|string(string $in_charset , string $out_charset , string $str)|
iconv_get_encoding|Retrieve internal configuration variables of iconv extension -|mixed([ string $type = &quot;all&quot; ])|
iconv_mime_decode|Decodes a MIME header field -|string(string $encoded_header [, int $mode = 0 [, string $charset = ini_get(&quot;iconv.internal_encoding&quot;) ]])|
iconv_mime_decode_headers|Decodes multiple MIME header fields at once -|array(string $encoded_headers [, int $mode = 0 [, string $charset = ini_get(&quot;iconv.internal_encoding&quot;) ]])|
iconv_mime_encode|Composes a MIME header field -|string(string $field_name , string $field_value [, array $preferences = NULL ])|
iconv_set_encoding|Set current setting for character encoding conversion -|bool(string $type , string $charset)|
iconv_strlen|Returns the character count of string -|int(string $str [, string $charset = ini_get(&quot;iconv.internal_encoding&quot;) ])|
iconv_strpos|Finds position of first occurrence of a needle within a haystack -|int(string $haystack , string $needle [, int $offset = 0 [, string $charset = ini_get(&quot;iconv.internal_encoding&quot;) ]])|
iconv_strrpos|Finds the last occurrence of a needle within a haystack -|int(string $haystack , string $needle [, string $charset = ini_get(&quot;iconv.internal_encoding&quot;) ])|
iconv_substr|Cut out part of a string -|string(string $str , int $offset [, int $length = iconv_strlen($str, $charset) [, string $charset = ini_get(&quot;iconv.internal_encoding&quot;) ]])|
idate|Format a local time/date as integer -|int(string $format [, int $timestamp = time() ])|
idn_to_ascii|Convert domain name to IDNA ASCII form. -|string(string $domain [, int $options ])|
idn_to_utf8|Convert domain name from IDNA ASCII to Unicode. -|string(string $domain [, int $options ])|
ignore_user_abort|Set whether a client disconnect should abort script execution -|int([ string $value ])|
image2wbmp|Output image to browser or file -|bool(resource $image [, string $filename [, int $threshold ]])|
image_type_to_extension|Get file extension for image type -|string(int $imagetype [, bool $include_dot = TRUE ])|
image_type_to_mime_type|Get Mime-Type for image-type returned by getimagesize,    exif_read_data, exif_thumbnail, exif_imagetype -|string(int $imagetype)|
imagealphablending|Set the blending mode for an image -|bool(resource $image , bool $blendmode)|
imageantialias|Should antialias functions be used or not -|bool(resource $image , bool $enabled)|
imagearc|Draws an arc -|bool(resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color)|
imagechar|Draw a character horizontally -|bool(resource $image , int $font , int $x , int $y , string $c , int $color)|
imagecharup|Draw a character vertically -|bool(resource $image , int $font , int $x , int $y , string $c , int $color)|
imagecolorallocate|Allocate a color for an image -|int(resource $image , int $red , int $green , int $blue)|
imagecolorallocatealpha|Allocate a color for an image -|int(resource $image , int $red , int $green , int $blue , int $alpha)|
imagecolorat|Get the index of the color of a pixel -|int(resource $image , int $x , int $y)|
imagecolorclosest|Get the index of the closest color to the specified color -|int(resource $image , int $red , int $green , int $blue)|
imagecolorclosestalpha|Get the index of the closest color to the specified color + alpha -|int(resource $image , int $red , int $green , int $blue , int $alpha)|
imagecolorclosesthwb|Get the index of the color which has the hue, white and blackness -|int(resource $image , int $red , int $green , int $blue)|
imagecolordeallocate|De-allocate a color for an image -|bool(resource $image , int $color)|
imagecolorexact|Get the index of the specified color -|int(resource $image , int $red , int $green , int $blue)|
imagecolorexactalpha|Get the index of the specified color + alpha -|int(resource $image , int $red , int $green , int $blue , int $alpha)|
imagecolormatch|Makes the colors of the palette version of an image more closely match the true color version -|bool(resource $image1 , resource $image2)|
imagecolorresolve|Get the index of the specified color or its closest possible alternative -|int(resource $image , int $red , int $green , int $blue)|
imagecolorresolvealpha|Get the index of the specified color + alpha or its closest possible alternative -|int(resource $image , int $red , int $green , int $blue , int $alpha)|
imagecolorset|Set the color for the specified palette index -|void(resource $image , int $index , int $red , int $green , int $blue [, int $alpha = 0 ])|
imagecolorsforindex|Get the colors for an index -|array(resource $image , int $index)|
imagecolorstotal|Find out the number of colors in an image&#039;s palette -|int(resource $image)|
imagecolortransparent|Define a color as transparent -|int(resource $image [, int $color ])|
imageconvolution|Apply a 3x3 convolution matrix, using coefficient and offset -|bool(resource $image , array $matrix , float $div , float $offset)|
imagecopy|Copy part of an image -|bool(resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h)|
imagecopymerge|Copy and merge part of an image -|bool(resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct)|
imagecopymergegray|Copy and merge part of an image with gray scale -|bool(resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct)|
imagecopyresampled|Copy and resize part of an image with resampling -|bool(resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h)|
imagecopyresized|Copy and resize part of an image -|bool(resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h)|
imagecreate|Create a new palette based image -|resource(int $width , int $height)|
imagecreatefromgd|Create a new image from GD file or URL -|resource(string $filename)|
imagecreatefromgd2|Create a new image from GD2 file or URL -|resource(string $filename)|
imagecreatefromgd2part|Create a new image from a given part of GD2 file or URL -|resource(string $filename , int $srcX , int $srcY , int $width , int $height)|
imagecreatefromgif|Create a new image from file or URL -|resource(string $filename)|
imagecreatefromjpeg|Create a new image from file or URL -|resource(string $filename)|
imagecreatefrompng|Create a new image from file or URL -|resource(string $filename)|
imagecreatefromstring|Create a new image from the image stream in the string -|resource(string $data)|
imagecreatefromwbmp|Create a new image from file or URL -|resource(string $filename)|
imagecreatefromxbm|Create a new image from file or URL -|resource(string $filename)|
imagecreatetruecolor|Create a new true color image -|resource(int $width , int $height)|
imagedashedline|Draw a dashed line -|bool(resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color)|
imagedestroy|Destroy an image -|bool(resource $image)|
imageellipse|Draw an ellipse -|bool(resource $image , int $cx , int $cy , int $width , int $height , int $color)|
imagefill|Flood fill -|bool(resource $image , int $x , int $y , int $color)|
imagefilledarc|Draw a partial arc and fill it -|bool(resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color , int $style)|
imagefilledellipse|Draw a filled ellipse -|bool(resource $image , int $cx , int $cy , int $width , int $height , int $color)|
imagefilledpolygon|Draw a filled polygon -|bool(resource $image , array $points , int $num_points , int $color)|
imagefilledrectangle|Draw a filled rectangle -|bool(resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color)|
imagefilltoborder|Flood fill to specific color -|bool(resource $image , int $x , int $y , int $border , int $color)|
imagefilter|Applies a filter to an image -|bool(resource $image , int $filtertype [, int $arg1 [, int $arg2 [, int $arg3 [, int $arg4 ]]]])|
imagefontheight|Get font height -|int(int $font)|
imagefontwidth|Get font width -|int(int $font)|
imageftbbox|Give the bounding box of a text using fonts via freetype2 -|array(float $size , float $angle , string $fontfile , string $text [, array $extrainfo ])|
imagefttext|Write text to the image using fonts using FreeType 2 -|array(resource $image , float $size , float $angle , int $x , int $y , int $color , string $fontfile , string $text [, array $extrainfo ])|
imagegammacorrect|Apply a gamma correction to a GD image -|bool(resource $image , float $inputgamma , float $outputgamma)|
imagegd|Output GD image to browser or file -|bool(resource $image [, string $filename ])|
imagegd2|Output GD2 image to browser or file -|bool(resource $image [, string $filename [, int $chunk_size [, int $type = IMG_GD2_RAW ]]])|
imagegif|Output image to browser or file -|bool(resource $image [, string $filename ])|
imageinterlace|Enable or disable interlace -|int(resource $image [, int $interlace = 0 ])|
imageistruecolor|Finds whether an image is a truecolor image -|bool(resource $image)|
imagejpeg|Output image to browser or file -|bool(resource $image [, string $filename [, int $quality ]])|
imagelayereffect|Set the alpha blending flag to use the bundled libgd layering effects -|bool(resource $image , int $effect)|
imageline|Draw a line -|bool(resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color)|
imageloadfont|Load a new font -|int(string $file)|
imagepalettecopy|Copy the palette from one image to another -|void(resource $destination , resource $source)|
imagepng|Output a PNG image to either the browser or a file -|bool(resource $image [, string $filename [, int $quality [, int $filters ]]])|
imagepolygon|Draws a polygon -|bool(resource $image , array $points , int $num_points , int $color)|
imagerectangle|Draw a rectangle -|bool(resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color)|
imagerotate|Rotate an image with a given angle -|resource(resource $image , float $angle , int $bgd_color [, int $ignore_transparent = 0 ])|
imagesavealpha|Set the flag to save full alpha channel information (as opposed to single-color transparency) when saving PNG images -|bool(resource $image , bool $saveflag)|
imagesetbrush|Set the brush image for line drawing -|bool(resource $image , resource $brush)|
imagesetpixel|Set a single pixel -|bool(resource $image , int $x , int $y , int $color)|
imagesetstyle|Set the style for line drawing -|bool(resource $image , array $style)|
imagesetthickness|Set the thickness for line drawing -|bool(resource $image , int $thickness)|
imagesettile|Set the tile image for filling -|bool(resource $image , resource $tile)|
imagestring|Draw a string horizontally -|bool(resource $image , int $font , int $x , int $y , string $string , int $color)|
imagestringup|Draw a string vertically -|bool(resource $image , int $font , int $x , int $y , string $string , int $color)|
imagesx|Get image width -|int(resource $image)|
imagesy|Get image height -|int(resource $image)|
imagetruecolortopalette|Convert a true color image to a palette image -|bool(resource $image , bool $dither , int $ncolors)|
imagettfbbox|Give the bounding box of a text using TrueType fonts -|array(float $size , float $angle , string $fontfile , string $text)|
imagettftext|Write text to the image using TrueType fonts -|array(resource $image , float $size , float $angle , int $x , int $y , int $color , string $fontfile , string $text)|
imagetypes|Return the image types supported by this PHP build -|int(void)|
imagewbmp|Output image to browser or file -|bool(resource $image [, string $filename [, int $foreground ]])|
imagexbm|Output XBM image to browser or file -|bool(resource $image , string $filename [, int $foreground ])|
imap_8bit|Convert an 8bit string to a quoted-printable string -|string(string $string)|
imap_alerts|Returns all IMAP alert messages that have occurred -|array(void)|
imap_append|Append a string message to a specified mailbox -|bool(resource $imap_stream , string $mailbox , string $message [, string $options = NULL [, string $internal_date = NULL ]])|
imap_base64|Decode BASE64 encoded text -|string(string $text)|
imap_binary|Convert an 8bit string to a base64 string -|string(string $string)|
imap_body|Read the message body -|string(resource $imap_stream , int $msg_number [, int $options = 0 ])|
imap_bodystruct|Read the structure of a specified body section of a specific message -|object(resource $imap_stream , int $msg_number , string $section)|
imap_check|Check current mailbox -|object(resource $imap_stream)|
imap_clearflag_full|Clears flags on messages -|bool(resource $imap_stream , string $sequence , string $flag [, int $options = 0 ])|
imap_close|Close an IMAP stream -|bool(resource $imap_stream [, int $flag = 0 ])|
imap_create|Alias of imap_createmailbox() -||
imap_createmailbox|Create a new mailbox -|bool(resource $imap_stream , string $mailbox)|
imap_delete|Mark a message for deletion from current mailbox -|bool(resource $imap_stream , int $msg_number [, int $options = 0 ])|
imap_deletemailbox|Delete a mailbox -|bool(resource $imap_stream , string $mailbox)|
imap_errors|Returns all of the IMAP errors that have occured -|array(void)|
imap_expunge|Delete all messages marked for deletion -|bool(resource $imap_stream)|
imap_fetch_overview|Read an overview of the information in the headers of the given message -|array(resource $imap_stream , string $sequence [, int $options = 0 ])|
imap_fetchbody|Fetch a particular section of the body of the message -|string(resource $imap_stream , int $msg_number , string $section [, int $options = 0 ])|
imap_fetchheader|Returns header for a message -|string(resource $imap_stream , int $msg_number [, int $options = 0 ])|
imap_fetchstructure|Read the structure of a particular message -|object(resource $imap_stream , int $msg_number [, int $options = 0 ])|
imap_fetchtext|Alias of imap_body() -||
imap_gc|Clears IMAP cache -|bool(resource $imap_stream , int $caches)|
imap_get_quota|Retrieve the quota level settings, and usage statics per mailbox -|array(resource $imap_stream , string $quota_root)|
imap_get_quotaroot|Retrieve the quota settings per user -|array(resource $imap_stream , string $quota_root)|
imap_getacl|Gets the ACL for a given mailbox -|array(resource $imap_stream , string $mailbox)|
imap_getmailboxes|Read the list of mailboxes, returning detailed information on each one -|array(resource $imap_stream , string $ref , string $pattern)|
imap_getsubscribed|List all the subscribed mailboxes -|array(resource $imap_stream , string $ref , string $pattern)|
imap_header|Alias of imap_headerinfo() -||
imap_headerinfo|Read the header of the message -|object(resource $imap_stream , int $msg_number [, int $fromlength = 0 [, int $subjectlength = 0 [, string $defaulthost = NULL ]]])|
imap_headers|Returns headers for all messages in a mailbox -|array(resource $imap_stream)|
imap_last_error|Gets the last IMAP error that occurred during this page request -|string(void)|
imap_list|Read the list of mailboxes -|array(resource $imap_stream , string $ref , string $pattern)|
imap_listmailbox|Alias of imap_list() -||
imap_listscan|Returns the list of mailboxes that matches the given text -|array(resource $imap_stream , string $ref , string $pattern , string $content)|
imap_listsubscribed|Alias of imap_lsub() -||
imap_lsub|List all the subscribed mailboxes -|array(resource $imap_stream , string $ref , string $pattern)|
imap_mail|Send an email message -|bool(string $to , string $subject , string $message [, string $additional_headers = NULL [, string $cc = NULL [, string $bcc = NULL [, string $rpath = NULL ]]]])|
imap_mail_compose|Create a MIME message based on given envelope and body sections -|string(array $envelope , array $body)|
imap_mail_copy|Copy specified messages to a mailbox -|bool(resource $imap_stream , string $msglist , string $mailbox [, int $options = 0 ])|
imap_mail_move|Move specified messages to a mailbox -|bool(resource $imap_stream , string $msglist , string $mailbox [, int $options = 0 ])|
imap_mailboxmsginfo|Get information about the current mailbox -|object(resource $imap_stream)|
imap_mime_header_decode|Decode MIME header elements -|array(string $text)|
imap_msgno|Gets the message sequence number for the given UID -|int(resource $imap_stream , int $uid)|
imap_num_msg|Gets the number of messages in the current mailbox -|int(resource $imap_stream)|
imap_num_recent|Gets the number of recent messages in current mailbox -|int(resource $imap_stream)|
imap_open|Open an IMAP stream to a mailbox -|resource(string $mailbox , string $username , string $password [, int $options = NIL [, int $n_retries = 0 [, array $params = NULL ]]])|
imap_ping|Check if the IMAP stream is still active -|bool(resource $imap_stream)|
imap_qprint|Convert a quoted-printable string to an 8 bit string -|string(string $string)|
imap_rename|Alias of imap_renamemailbox() -||
imap_renamemailbox|Rename an old mailbox to new mailbox -|bool(resource $imap_stream , string $old_mbox , string $new_mbox)|
imap_reopen|Reopen IMAP stream to new mailbox -|bool(resource $imap_stream , string $mailbox [, int $options = 0 [, int $n_retries = 0 ]])|
imap_rfc822_parse_adrlist|Parses an address string -|array(string $address , string $default_host)|
imap_rfc822_parse_headers|Parse mail headers from a string -|object(string $headers [, string $defaulthost = &quot;UNKNOWN&quot; ])|
imap_rfc822_write_address|Returns a properly formatted email address given the mailbox, host, and personal info -|string(string $mailbox , string $host , string $personal)|
imap_savebody|Save a specific body section to a file -|bool(resource $imap_stream , mixed $file , int $msg_number [, string $part_number = &quot;&quot; [, int $options = 0 ]])|
imap_scan|Alias of imap_listscan() -||
imap_scanmailbox|Alias of imap_listscan() -||
imap_search|This function returns an array of messages matching the given search criteria -|array(resource $imap_stream , string $criteria [, int $options = SE_FREE [, string $charset = NIL ]])|
imap_set_quota|Sets a quota for a given mailbox -|bool(resource $imap_stream , string $quota_root , int $quota_limit)|
imap_setacl|Sets the ACL for a giving mailbox -|bool(resource $imap_stream , string $mailbox , string $id , string $rights)|
imap_setflag_full|Sets flags on messages -|bool(resource $imap_stream , string $sequence , string $flag [, int $options = NIL ])|
imap_sort|Gets and sort messages -|array(resource $imap_stream , int $criteria , int $reverse [, int $options = 0 [, string $search_criteria = NULL [, string $charset = NIL ]]])|
imap_status|Returns status information on a mailbox -|object(resource $imap_stream , string $mailbox , int $options)|
imap_subscribe|Subscribe to a mailbox -|bool(resource $imap_stream , string $mailbox)|
imap_thread|Returns a tree of threaded message -|array(resource $imap_stream [, int $options = SE_FREE ])|
imap_timeout|Set or fetch imap timeout -|mixed(int $timeout_type [, int $timeout = -1 ])|
imap_uid|This function returns the UID for the given message sequence number -|int(resource $imap_stream , int $msg_number)|
imap_undelete|Unmark the message which is marked deleted -|bool(resource $imap_stream , int $msg_number [, int $flags = 0 ])|
imap_unsubscribe|Unsubscribe from a mailbox -|bool(resource $imap_stream , string $mailbox)|
imap_utf7_decode|Decodes a modified UTF-7 encoded string -|string(string $text)|
imap_utf7_encode|Converts ISO-8859-1 string to modified UTF-7 text -|string(string $data)|
imap_utf8|Converts MIME-encoded text to UTF-8 -|string(string $mime_encoded_text)|
implode|Join array elements with a string -|string(string $glue , array $pieces)|
import_request_variables|Import GET/POST/Cookie variables into the global scope -|bool(string $types [, string $prefix ])|
in_array|Checks if a value exists in an array -|bool(mixed $needle , array $haystack [, bool $strict = FALSE ])|
inet_ntop|Converts a packed internet address to a human readable representation -|string(string $in_addr)|
inet_pton|Converts a human readable IP address to its packed in_addr representation -|string(string $address)|
ini_alter|Alias of ini_set() -||
ini_get|Gets the value of a configuration option -|string(string $varname)|
ini_get_all|Gets all configuration options -|array([ string $extension [, bool $details = true ]])|
ini_restore|Restores the value of a configuration option -|void(string $varname)|
ini_set|Sets the value of a configuration option -|string(string $varname , string $newvalue)|
interface_exists|Checks if the interface has been defined -|bool(string $interface_name [, bool $autoload = true ])|
intl_error_name|Get symbolic name for a given error code -|string(int $error_code)|
intl_get_error_code|Get the last error code -|int(void)|
intl_get_error_message|Get description of the last error -|string(void)|
intl_is_failure|Check whether the given error code indicates failure -|bool(int $error_code)|
intval|Get the integer value of a variable -|int(mixed $var [, int $base = 10 ])|
ip2long|Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address -|int(string $ip_address)|
iptcembed|Embeds binary IPTC data into a JPEG image -|mixed(string $iptcdata , string $jpeg_file_name [, int $spool ])|
iptcparse|Parse a binary IPTC block into single tags. -|array(string $iptcblock)|
is_a|Checks if the object is of this class or has this class as one of its parents -|bool(object $object , string $class_name)|
is_array|Finds whether a variable is an array -|bool(mixed $var)|
is_bool|    Finds out whether a variable is a boolean    -|bool(mixed $var)|
is_callable|    Verify that the contents of a variable can be called as a function    -|bool(callback $name [, bool $syntax_only = false [, string &$callable_name ]])|
is_dir|Tells whether the filename is a directory -|bool(string $filename)|
is_double|Alias of is_float() -||
is_executable|Tells whether the filename is executable -|bool(string $filename)|
is_file|Tells whether the filename is a regular file -|bool(string $filename)|
is_finite|Finds whether a value is a legal finite number -|bool(float $val)|
is_float|Finds whether the type of a variable is float -|bool(mixed $var)|
is_infinite|Finds whether a value is infinite -|bool(float $val)|
is_int|Find whether the type of a variable is integer -|bool(mixed $var)|
is_integer|Alias of is_int() -||
is_link|Tells whether the filename is a symbolic link -|bool(string $filename)|
is_long|Alias of is_int() -||
is_nan|Finds whether a value is not a number -|bool(float $val)|
is_null|    Finds whether a variable is NULL    -|bool(mixed $var)|
is_numeric|    Finds whether a variable is a number or a numeric string    -|bool(mixed $var)|
is_object|Finds whether a variable is an object -|bool(mixed $var)|
is_readable|Tells whether a file exists and is readable -|bool(string $filename)|
is_real|Alias of is_float() -||
is_resource|    Finds whether a variable is a resource    -|bool(mixed $var)|
is_scalar|    Finds whether a variable is a scalar    -|bool(mixed $var)|
is_soap_fault|Checks if a SOAP call has failed -|bool(mixed $object)|
is_string|Find whether the type of a variable is string -|bool(mixed $var)|
is_subclass_of|Checks if the object has this class as one of its parents -|bool(mixed $object , string $class_name)|
is_uploaded_file|Tells whether the file was uploaded via HTTP POST -|bool(string $filename)|
is_writable|Tells whether the filename is writable -|bool(string $filename)|
is_writeable|Alias of is_writable() -||
iterator_apply|Call a function for every element in an iterator -|int(Traversable $iterator , callback $function [, array $args ])|
iterator_count|Count the elements in an iterator -|int(Traversable $iterator)|
iterator_to_array|Copy the iterator into an array -|array(Traversable $iterator [, bool $use_keys = true ])|
jdtojewish|Converts a Julian day count to a Jewish calendar date -|string(int $juliandaycount [, bool $hebrew = false [, int $fl = 0 ]])|
jdtounix|Convert Julian Day to Unix timestamp -|int(int $jday)|
join|Alias of implode() -||
jpeg2wbmp|Convert JPEG image file to WBMP image file -|bool(string $jpegname , string $wbmpname , int $dest_height , int $dest_width , int $threshold)|
json_decode|Decodes a JSON string -|mixed(string $json [, bool $assoc = false [, int $depth = 512 [, int $options = 0 ]]])|
json_encode|Returns the JSON representation of a value -|string(mixed $value [, int $options = 0 ])|
json_last_error|Returns the last error occurred -|int(void)|
key|Fetch a key from an array -|mixed(array &$array)|
krsort|Sort an array by key in reverse order -|bool(array &$array [, int $sort_flags = SORT_REGULAR ])|
ksort|Sort an array by key -|bool(array &$array [, int $sort_flags = SORT_REGULAR ])|
lcfirst|Make a string&#039;s first character lowercase -|string(string $str)|
lcg_value|Combined linear congruential generator -|float(void)|
lchgrp|Changes group ownership of symlink -|bool(string $filename , mixed $group)|
lchown|Changes user ownership of symlink -|bool(string $filename , mixed $user)|
ldap_add|Add entries to LDAP directory -|bool(resource $link_identifier , string $dn , array $entry)|
ldap_bind|Bind to LDAP directory -|bool(resource $link_identifier [, string $bind_rdn = NULL [, string $bind_password = NULL ]])|
ldap_close|Alias of ldap_unbind() -||
ldap_compare|Compare value of attribute found in entry specified with DN -|mixed(resource $link_identifier , string $dn , string $attribute , string $value)|
ldap_connect|Connect to an LDAP server -|resource([ string $hostname = NULL [, int $port = 389 ]])|
ldap_count_entries|Count the number of entries in a search -|int(resource $link_identifier , resource $result_identifier)|
ldap_delete|Delete an entry from a directory -|bool(resource $link_identifier , string $dn)|
ldap_dn2ufn|Convert DN to User Friendly Naming format -|string(string $dn)|
ldap_err2str|Convert LDAP error number into string error message -|string(int $errno)|
ldap_errno|Return the LDAP error number of the last LDAP command -|int(resource $link_identifier)|
ldap_error|Return the LDAP error message of the last LDAP command -|string(resource $link_identifier)|
ldap_explode_dn|Splits DN into its component parts -|array(string $dn , int $with_attrib)|
ldap_first_attribute|Return first attribute -|string(resource $link_identifier , resource $result_entry_identifier)|
ldap_first_entry|Return first result id -|resource(resource $link_identifier , resource $result_identifier)|
ldap_first_reference|Return first reference -|resource(resource $link , resource $result)|
ldap_free_result|Free result memory -|bool(resource $result_identifier)|
ldap_get_attributes|Get attributes from a search result entry -|array(resource $link_identifier , resource $result_entry_identifier)|
ldap_get_dn|Get the DN of a result entry -|string(resource $link_identifier , resource $result_entry_identifier)|
ldap_get_entries|Get all result entries -|array(resource $link_identifier , resource $result_identifier)|
ldap_get_option|Get the current value for given option -|bool(resource $link_identifier , int $option , mixed &$retval)|
ldap_get_values|Get all values from a result entry -|array(resource $link_identifier , resource $result_entry_identifier , string $attribute)|
ldap_get_values_len|Get all binary values from a result entry -|array(resource $link_identifier , resource $result_entry_identifier , string $attribute)|
ldap_list|Single-level search -|resource(resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]])|
ldap_mod_add|Add attribute values to current attributes -|bool(resource $link_identifier , string $dn , array $entry)|
ldap_mod_del|Delete attribute values from current attributes -|bool(resource $link_identifier , string $dn , array $entry)|
ldap_mod_replace|Replace attribute values with new ones -|bool(resource $link_identifier , string $dn , array $entry)|
ldap_modify|Modify an LDAP entry -|bool(resource $link_identifier , string $dn , array $entry)|
ldap_next_attribute|Get the next attribute in result -|string(resource $link_identifier , resource $result_entry_identifier)|
ldap_next_entry|Get next result entry -|resource(resource $link_identifier , resource $result_entry_identifier)|
ldap_next_reference|Get next reference -|resource(resource $link , resource $entry)|
ldap_parse_reference|Extract information from reference entry -|bool(resource $link , resource $entry , array &$referrals)|
ldap_parse_result|Extract information from result -|bool(resource $link , resource $result , int &$errcode [, string &$matcheddn [, string &$errmsg [, array &$referrals ]]])|
ldap_read|Read an entry -|resource(resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]])|
ldap_rename|Modify the name of an entry -|bool(resource $link_identifier , string $dn , string $newrdn , string $newparent , bool $deleteoldrdn)|
ldap_search|Search LDAP tree -|resource(resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]])|
ldap_set_option|Set the value of the given option -|bool(resource $link_identifier , int $option , mixed $newval)|
ldap_set_rebind_proc|Set a callback function to do re-binds on referral chasing -|bool(resource $link , callback $callback)|
ldap_sort|Sort LDAP result entries -|bool(resource $link , resource $result , string $sortfilter)|
ldap_start_tls|Start TLS -|bool(resource $link)|
ldap_unbind|Unbind from LDAP directory -|bool(resource $link_identifier)|
levenshtein|Calculate Levenshtein distance between two strings -|int(string $str1 , string $str2)|
libxml_clear_errors|    Clear libxml error buffer    -|void(void)|
libxml_disable_entity_loader|Disable the ability to load external entities -|bool([ bool $disable = true ])|
libxml_get_errors|    Retrieve array of errors    -|array(void)|
libxml_get_last_error|    Retrieve last error from libxml    -|LibXMLError(void)|
libxml_set_streams_context|    Set the streams context for the next libxml document load or write    -|void(resource $streams_context)|
libxml_use_internal_errors|    Disable libxml errors and allow user to fetch error information as needed    -|bool([ bool $use_errors = false ])|
link|Create a hard link -|bool(string $target , string $link)|
linkinfo|Gets information about a link -|int(string $path)|
localeconv|Get numeric formatting information -|array(void)|
localtime|Get the local time -|array([ int $timestamp = time() [, bool $is_associative = false ]])|
log|Natural logarithm -|float(float $arg [, float $base = M_E ])|
log10|Base-10 logarithm -|float(float $arg)|
log1p|    Returns log(1 + number), computed in a way that is accurate even when    the value of number is close to zero    -|float(float $number)|
long2ip|Converts an (IPv4) Internet network address into a string in Internet standard dotted format -|string(string $proper_address)|
lstat|Gives information about a file or symbolic link -|array(string $filename)|
ltrim|Strip whitespace (or other characters) from the beginning of a string -|string(string $str [, string $charlist ])|
magic_quotes_runtime|Alias of set_magic_quotes_runtime() -||
mail|Send mail -|bool(string $to , string $subject , string $message [, string $additional_headers [, string $additional_parameters ]])|
max|Find highest value -|mixed(array $values)|
mb_check_encoding|Check if the string is valid for the specified encoding -|bool([ string $var = NULL [, string $encoding = mb_internal_encoding() ]])|
mb_convert_case|Perform case folding on a string -|string(string $str , int $mode = MB_CASE_UPPER [, string $encoding = mb_internal_encoding() ])|
mb_convert_encoding|Convert character encoding -|string(string $str , string $to_encoding [, mixed $from_encoding ])|
mb_convert_kana|Convert &quot;kana&quot; one from another (&quot;zen-kaku&quot;, &quot;han-kaku&quot; and more) -|string(string $str [, string $option = &quot;KV&quot; [, string $encoding ]])|
mb_convert_variables|Convert character code in variable(s) -|string(string $to_encoding , mixed $from_encoding , mixed &$vars [, mixed &$... ])|
mb_decode_mimeheader|Decode string in MIME header field -|string(string $str)|
mb_decode_numericentity|Decode HTML numeric string reference to character -|string(string $str , array $convmap , string $encoding)|
mb_detect_encoding|Detect character encoding -|string(string $str [, mixed $encoding_list = mb_detect_order() [, bool $strict = false ]])|
mb_detect_order|Set/Get character encoding detection order -|mixed([ mixed $encoding_list ])|
mb_encode_mimeheader|Encode string for MIME header -|string(string $str [, string $charset [, string $transfer_encoding [, string $linefeed = &quot;\r\n&quot; [, int $indent = 0 ]]]])|
mb_encode_numericentity|Encode character to HTML numeric string reference -|string(string $str , array $convmap , string $encoding)|
mb_encoding_aliases|Get aliases of a known encoding type -|array(string $encoding)|
mb_ereg|Regular expression match with multibyte support -|int(string $pattern , string $string [, array $regs ])|
mb_ereg_match|Regular expression match for multibyte string -|bool(string $pattern , string $string [, string $option = &quot;msr&quot; ])|
mb_ereg_replace|Replace regular expression with multibyte support -|string(string $pattern , string $replacement , string $string [, string $option = &quot;msr&quot; ])|
mb_ereg_search|Multibyte regular expression match for predefined multibyte string -|bool([ string $pattern [, string $option = &quot;ms&quot; ]])|
mb_ereg_search_getpos|Returns start point for next regular expression match -|int(void)|
mb_ereg_search_getregs|Retrieve the result from the last multibyte regular expression match -|array(void)|
mb_ereg_search_init|Setup string and regular expression for a multibyte regular expression match -|bool(string $string [, string $pattern [, string $option = &quot;msr&quot; ]])|
mb_ereg_search_pos|Returns position and length of a matched part of the multibyte regular expression for a predefined multibyte string -|array([ string $pattern [, string $option = &quot;ms&quot; ]])|
mb_ereg_search_regs|Returns the matched part of a multibyte regular expression -|array([ string $pattern [, string $option = &quot;ms&quot; ]])|
mb_ereg_search_setpos|Set start point of next regular expression match -|bool(int $position)|
mb_eregi|Regular expression match ignoring case with multibyte support -|int(string $pattern , string $string [, array $regs ])|
mb_eregi_replace|Replace regular expression with multibyte support ignoring case -|string(string $pattern , string $replace , string $string [, string $option = &quot;msri&quot; ])|
mb_get_info|Get internal settings of mbstring -|mixed([ string $type = &quot;all&quot; ])|
mb_http_input|Detect HTTP input character encoding -|mixed([ string $type = &quot;&quot; ])|
mb_http_output|Set/Get HTTP output character encoding -|mixed([ string $encoding ])|
mb_internal_encoding|Set/Get internal character encoding -|mixed([ string $encoding = mb_internal_encoding() ])|
mb_language|Set/Get current language -|mixed([ string $language ])|
mb_list_encodings|Returns an array of all supported encodings -|array(void)|
mb_output_handler|Callback function converts character encoding in output buffer -|string(string $contents , int $status)|
mb_parse_str|Parse GET/POST/COOKIE data and set global variable -|bool(string $encoded_string [, array &$result ])|
mb_preferred_mime_name|Get MIME charset string -|string(string $encoding)|
mb_regex_encoding|Returns current encoding for multibyte regex as string -|mixed([ string $encoding ])|
mb_regex_set_options|Set/Get the default options for mbregex functions -|string([ string $options = &quot;msr&quot; ])|
mb_send_mail|Send encoded mail -|bool(string $to , string $subject , string $message [, string $additional_headers = NULL [, string $additional_parameter = NULL ]])|
mb_split|Split multibyte string using regular expression -|array(string $pattern , string $string [, int $limit = -1 ])|
mb_strcut|Get part of string -|string(string $str , int $start [, int $length [, string $encoding ]])|
mb_strimwidth|Get truncated string with specified width -|string(string $str , int $start , int $width [, string $trimmarker [, string $encoding ]])|
mb_stripos|Finds position of first occurrence of a string within another, case insensitive -|int(string $haystack , string $needle [, int $offset [, string $encoding ]])|
mb_stristr|Finds first occurrence of a string within another, case insensitive -|string(string $haystack , string $needle [, bool $part = false [, string $encoding ]])|
mb_strlen|Get string length -|int(string $str [, string $encoding ])|
mb_strpos|Find position of first occurrence of string in a string -|int(string $haystack , string $needle [, int $offset = 0 [, string $encoding ]])|
mb_strrchr|Finds the last occurrence of a character in a string within another -|string(string $haystack , string $needle [, bool $part = false [, string $encoding ]])|
mb_strrichr|Finds the last occurrence of a character in a string within another, case insensitive -|string(string $haystack , string $needle [, bool $part = false [, string $encoding ]])|
mb_strripos|Finds position of last occurrence of a string within another, case insensitive -|int(string $haystack , string $needle [, int $offset = 0 [, string $encoding ]])|
mb_strrpos|Find position of last occurrence of a string in a string -|int(string $haystack , string $needle [, int $offset = 0 [, string $encoding ]])|
mb_strstr|Finds first occurrence of a string within another -|string(string $haystack , string $needle [, bool $part = false [, string $encoding ]])|
mb_strtolower|Make a string lowercase -|string(string $str [, string $encoding = mb_internal_encoding() ])|
mb_strtoupper|Make a string uppercase -|string(string $str [, string $encoding = mb_internal_encoding() ])|
mb_strwidth|Return width of string -|int(string $str [, string $encoding ])|
mb_substitute_character|Set/Get substitution character -|mixed([ mixed $substrchar ])|
mb_substr|Get part of string -|string(string $str , int $start [, int $length [, string $encoding ]])|
mb_substr_count|Count the number of substring occurrences -|int(string $haystack , string $needle [, string $encoding ])|
mcrypt_cbc|Encrypts/decrypts data in CBC mode -|string(int $cipher , string $key , string $data , int $mode [, string $iv ])|
mcrypt_cfb|Encrypts/decrypts data in CFB mode -|string(int $cipher , string $key , string $data , int $mode , string $iv)|
mcrypt_create_iv|Creates an initialization vector (IV) from a random source -|string(int $size [, int $source = MCRYPT_DEV_RANDOM ])|
mcrypt_decrypt|Decrypts crypttext with given parameters -|string(string $cipher , string $key , string $data , string $mode [, string $iv ])|
mcrypt_ecb|Deprecated: Encrypts/decrypts data in ECB mode -|string(int $cipher , string $key , string $data , int $mode)|
mcrypt_enc_get_algorithms_name|Returns the name of the opened algorithm -|string(resource $td)|
mcrypt_enc_get_block_size|Returns the blocksize of the opened algorithm -|int(resource $td)|
mcrypt_enc_get_iv_size|Returns the size of the IV of the opened algorithm -|int(resource $td)|
mcrypt_enc_get_key_size|Returns the maximum supported keysize of the opened mode -|int(resource $td)|
mcrypt_enc_get_modes_name|Returns the name of the opened mode -|string(resource $td)|
mcrypt_enc_get_supported_key_sizes|Returns an array with the supported keysizes of the opened algorithm -|array(resource $td)|
mcrypt_enc_is_block_algorithm|Checks whether the algorithm of the opened mode is a block algorithm -|bool(resource $td)|
mcrypt_enc_is_block_algorithm_mode|Checks whether the encryption of the opened mode works on blocks -|bool(resource $td)|
mcrypt_enc_is_block_mode|Checks whether the opened mode outputs blocks -|bool(resource $td)|
mcrypt_enc_self_test|Runs a self test on the opened module -|int(resource $td)|
mcrypt_encrypt|Encrypts plaintext with given parameters -|string(string $cipher , string $key , string $data , string $mode [, string $iv ])|
mcrypt_generic|This function encrypts data -|string(resource $td , string $data)|
mcrypt_generic_deinit|This function deinitializes an encryption module -|bool(resource $td)|
mcrypt_generic_end|This function terminates encryption -|bool(resource $td)|
mcrypt_generic_init|This function initializes all buffers needed for encryption -|int(resource $td , string $key , string $iv)|
mcrypt_get_block_size|Gets the block size of the specified cipher -|int(int $cipher)|
mcrypt_get_cipher_name|Gets the name of the specified cipher -|string(int $cipher)|
mcrypt_get_iv_size|Returns the size of the IV belonging to a specific cipher/mode combination -|int(string $cipher , string $mode)|
mcrypt_get_key_size|Gets the key size of the specified cipher -|int(int $cipher)|
mcrypt_list_algorithms|Gets an array of all supported ciphers -|array([ string $lib_dir = ini_get(&quot;mcrypt.algorithms_dir&quot;) ])|
mcrypt_list_modes|Gets an array of all supported modes -|array([ string $lib_dir = ini_get(&quot;mcrypt.modes_dir&quot;) ])|
mcrypt_module_close|Closes the mcrypt module -|bool(resource $td)|
mcrypt_module_get_algo_block_size|Returns the blocksize of the specified algorithm -|int(string $algorithm [, string $lib_dir ])|
mcrypt_module_get_algo_key_size|Returns the maximum supported keysize of the opened mode -|int(string $algorithm [, string $lib_dir ])|
mcrypt_module_get_supported_key_sizes|Returns an array with the supported keysizes of the opened algorithm -|array(string $algorithm [, string $lib_dir ])|
mcrypt_module_is_block_algorithm|This function checks whether the specified algorithm is a block algorithm -|bool(string $algorithm [, string $lib_dir ])|
mcrypt_module_is_block_algorithm_mode|Returns if the specified module is a block algorithm or not -|bool(string $mode [, string $lib_dir ])|
mcrypt_module_is_block_mode|Returns if the specified mode outputs blocks or not -|bool(string $mode [, string $lib_dir ])|
mcrypt_module_open|Opens the module of the algorithm and the mode to be used -|resource(string $algorithm , string $algorithm_directory , string $mode , string $mode_directory)|
mcrypt_module_self_test|This function runs a self test on the specified module -|bool(string $algorithm [, string $lib_dir ])|
mcrypt_ofb|Encrypts/decrypts data in OFB mode -|string(int $cipher , string $key , string $data , int $mode , string $iv)|
md5|Calculate the md5 hash of a string -|string(string $str [, bool $raw_output = false ])|
md5_file|Calculates the md5 hash of a given file -|string(string $filename [, bool $raw_output = false ])|
mdecrypt_generic|Decrypts data -|string(resource $td , string $data)|
memory_get_peak_usage|Returns the peak of memory allocated by PHP -|int([ bool $real_usage = false ])|
memory_get_usage|Returns the amount of memory allocated to PHP -|int([ bool $real_usage = false ])|
metaphone|Calculate the metaphone key of a string -|string(string $str [, int $phonemes = 0 ])|
method_exists|Checks if the class method exists -|bool(mixed $object , string $method_name)|
mhash|Computes hash -|string(int $hash , string $data [, string $key ])|
mhash_count|Gets the highest available hash ID -|int(void)|
mhash_get_block_size|Gets the block size of the specified hash -|int(int $hash)|
mhash_get_hash_name|Gets the name of the specified hash -|string(int $hash)|
mhash_keygen_s2k|Generates a key -|string(int $hash , string $password , string $salt , int $bytes)|
microtime|Return current Unix timestamp with microseconds -|mixed([ bool $get_as_float = false ])|
mime_content_type|Detect MIME Content-type for a file (deprecated) -|string(string $filename)|
min|Find lowest value -|mixed(array $values)|
ming_keypress|Returns the action flag for keyPress(char) -|int(string $char)|
ming_setcubicthreshold|    Set cubic threshold    -|void(int $threshold)|
ming_setscale|    Set the global scaling factor.    -|void(float $scale)|
ming_setswfcompression|Sets the SWF output compression -|void(int $level)|
ming_useconstants|Use constant pool -|void(int $use)|
ming_useswfversion|Sets the SWF version -|void(int $version)|
mkdir|Makes directory -|bool(string $pathname [, int $mode = 0777 [, bool $recursive = false [, resource $context ]]])|
mktime|Get Unix timestamp for a date -|int([ int $hour = date(&quot;H&quot;) [, int $minute = date(&quot;i&quot;) [, int $second = date(&quot;s&quot;) [, int $month = date(&quot;n&quot;) [, int $day = date(&quot;j&quot;) [, int $year = date(&quot;Y&quot;) [, int $is_dst = -1 ]]]]]]])|
money_format|Formats a number as a currency string -|string(string $format , float $number)|
move_uploaded_file|Moves an uploaded file to a new location -|bool(string $filename , string $destination)|
mssql_bind|Adds a parameter to a stored procedure or a remote stored procedure -|bool(resource $stmt , string $param_name , mixed &$var , int $type [, bool $is_output = false [, bool $is_null = false [, int $maxlen = -1 ]]])|
mssql_close|Close MS SQL Server connection -|bool([ resource $link_identifier ])|
mssql_connect|Open MS SQL server connection -|resource([ string $servername [, string $username [, string $password [, bool $new_link = false ]]]])|
mssql_data_seek|Moves internal row pointer -|bool(resource $result_identifier , int $row_number)|
mssql_execute|Executes a stored procedure on a MS SQL server database -|mixed(resource $stmt [, bool $skip_results = false ])|
mssql_fetch_array|Fetch a result row as an associative array, a numeric array, or both -|array(resource $result [, int $result_type = MSSQL_BOTH ])|
mssql_fetch_assoc|Returns an associative array of the current row in the result -|array(resource $result_id)|
mssql_fetch_batch|Returns the next batch of records -|int(resource $result)|
mssql_fetch_field|Get field information -|object(resource $result [, int $field_offset = -1 ])|
mssql_fetch_object|Fetch row as object -|object(resource $result)|
mssql_fetch_row|Get row as enumerated array -|array(resource $result)|
mssql_field_length|Get the length of a field -|int(resource $result [, int $offset = -1 ])|
mssql_field_name|Get the name of a field -|string(resource $result [, int $offset = -1 ])|
mssql_field_seek|Seeks to the specified field offset -|bool(resource $result , int $field_offset)|
mssql_field_type|Gets the type of a field -|string(resource $result [, int $offset = -1 ])|
mssql_free_result|Free result memory -|bool(resource $result)|
mssql_free_statement|Free statement memory -|bool(resource $stmt)|
mssql_get_last_message|Returns the last message from the server -|string(void)|
mssql_guid_string|Converts a 16 byte binary GUID to a string -|string(string $binary [, bool $short_format = false ])|
mssql_init|Initializes a stored procedure or a remote stored procedure -|resource(string $sp_name [, resource $link_identifier ])|
mssql_min_error_severity|Sets the minimum error severity -|void(int $severity)|
mssql_min_message_severity|Sets the minimum message severity -|void(int $severity)|
mssql_next_result|Move the internal result pointer to the next result -|bool(resource $result_id)|
mssql_num_fields|Gets the number of fields in result -|int(resource $result)|
mssql_num_rows|Gets the number of rows in result -|int(resource $result)|
mssql_pconnect|Open persistent MS SQL connection -|resource([ string $servername [, string $username [, string $password [, bool $new_link = false ]]]])|
mssql_query|Send MS SQL query -|mixed(string $query [, resource $link_identifier [, int $batch_size = 0 ]])|
mssql_result|Get result data -|string(resource $result , int $row , mixed $field)|
mssql_rows_affected|Returns the number of records affected by the query -|int(resource $link_identifier)|
mssql_select_db|Select MS SQL database -|bool(string $database_name [, resource $link_identifier ])|
mt_getrandmax|Show largest possible random value -|int(void)|
mt_rand|Generate a better random value -|int(void)|
mt_srand|Seed the better random number generator -|void([ int $seed ])|
mysql_affected_rows|Get number of affected rows in previous MySQL operation -|int([ resource $link_identifier ])|
mysql_client_encoding|Returns the name of the character set -|string([ resource $link_identifier ])|
mysql_close|Close MySQL connection -|bool([ resource $link_identifier ])|
mysql_connect|Open a connection to a MySQL Server -|resource([ string $server = ini_get(&quot;mysql.default_host&quot;) [, string $username = ini_get(&quot;mysql.default_user&quot;) [, string $password = ini_get(&quot;mysql.default_password&quot;) [, bool $new_link = false [, int $client_flags = 0 ]]]]])|
mysql_data_seek|Move internal result pointer -|bool(resource $result , int $row_number)|
mysql_db_name|Retrieves database name from the call to mysql_list_dbs() -|string(resource $result , int $row [, mixed $field ])|
mysql_db_query|Selects a database and executes a query on it -|resource(string $database , string $query [, resource $link_identifier ])|
mysql_errno|Returns the numerical value of the error message from previous MySQL operation -|int([ resource $link_identifier ])|
mysql_error|Returns the text of the error message from previous MySQL operation -|string([ resource $link_identifier ])|
mysql_escape_string|Escapes a string for use in a mysql_query -|string(string $unescaped_string)|
mysql_fetch_array|Fetch a result row as an associative array, a numeric array, or both -|array(resource $result [, int $result_type = MYSQL_BOTH ])|
mysql_fetch_assoc|Fetch a result row as an associative array -|array(resource $result)|
mysql_fetch_field|Get column information from a result and return as an object -|object(resource $result [, int $field_offset = 0 ])|
mysql_fetch_lengths|Get the length of each output in a result -|array(resource $result)|
mysql_fetch_object|Fetch a result row as an object -|object(resource $result [, string $class_name [, array $params ]])|
mysql_fetch_row|Get a result row as an enumerated array -|array(resource $result)|
mysql_field_flags|Get the flags associated with the specified field in a result -|string(resource $result , int $field_offset)|
mysql_field_len|Returns the length of the specified field -|int(resource $result , int $field_offset)|
mysql_field_name|Get the name of the specified field in a result -|string(resource $result , int $field_offset)|
mysql_field_seek|Set result pointer to a specified field offset -|bool(resource $result , int $field_offset)|
mysql_field_table|Get name of the table the specified field is in -|string(resource $result , int $field_offset)|
mysql_field_type|Get the type of the specified field in a result -|string(resource $result , int $field_offset)|
mysql_free_result|Free result memory -|bool(resource $result)|
mysql_get_client_info|Get MySQL client info -|string(void)|
mysql_get_host_info|Get MySQL host info -|string([ resource $link_identifier ])|
mysql_get_proto_info|Get MySQL protocol info -|int([ resource $link_identifier ])|
mysql_get_server_info|Get MySQL server info -|string([ resource $link_identifier ])|
mysql_info|Get information about the most recent query -|string([ resource $link_identifier ])|
mysql_insert_id|Get the ID generated in the last query -|int([ resource $link_identifier ])|
mysql_list_dbs|List databases available on a MySQL server -|resource([ resource $link_identifier ])|
mysql_list_fields|List MySQL table fields -|resource(string $database_name , string $table_name [, resource $link_identifier ])|
mysql_list_processes|List MySQL processes -|resource([ resource $link_identifier ])|
mysql_list_tables|List tables in a MySQL database -|resource(string $database [, resource $link_identifier ])|
mysql_num_fields|Get number of fields in result -|int(resource $result)|
mysql_num_rows|Get number of rows in result -|int(resource $result)|
mysql_pconnect|Open a persistent connection to a MySQL server -|resource([ string $server = ini_get(&quot;mysql.default_host&quot;) [, string $username = ini_get(&quot;mysql.default_user&quot;) [, string $password = ini_get(&quot;mysql.default_password&quot;) [, int $client_flags ]]]])|
mysql_ping|Ping a server connection or reconnect if there is no connection -|bool([ resource $link_identifier ])|
mysql_query|Send a MySQL query -|resource(string $query [, resource $link_identifier ])|
mysql_real_escape_string|Escapes special characters in a string for use in an SQL statement -|string(string $unescaped_string [, resource $link_identifier ])|
mysql_result|Get result data -|string(resource $result , int $row [, mixed $field = 0 ])|
mysql_select_db|Select a MySQL database -|bool(string $database_name [, resource $link_identifier ])|
mysql_set_charset|Sets the client character set -|bool(string $charset [, resource $link_identifier ])|
mysql_stat|Get current system status -|string([ resource $link_identifier ])|
mysql_tablename|Get table name of field -|string(resource $result , int $i)|
mysql_thread_id|Return the current thread ID -|int([ resource $link_identifier ])|
mysql_unbuffered_query|Send an SQL query to MySQL without fetching and buffering the result rows. -|resource(string $query [, resource $link_identifier ])|
mysqli_bind_param|Alias for mysqli_stmt_bind_param() -||
mysqli_bind_result|Alias for mysqli_stmt_bind_result() -||
mysqli_client_encoding|Alias of mysqli_character_set_name() -||
mysqli_connect|Alias of  mysqli::__construct() -||
mysqli_escape_string|Alias of mysqli_real_escape_string() -||
mysqli_execute|Alias for mysqli_stmt_execute() -||
mysqli_fetch|Alias for mysqli_stmt_fetch() -||
mysqli_get_metadata|Alias for mysqli_stmt_result_metadata() -||
mysqli_param_count|Alias for mysqli_stmt_param_count() -||
mysqli_report|Enables or disables internal report functions -|bool(int $flags)|
mysqli_send_long_data|Alias for mysqli_stmt_send_long_data() -||
mysqli_set_opt|Alias of mysqli_options() -||
natcasesort|Sort an array using a case insensitive &quot;natural order&quot; algorithm -|bool(array &$array)|
natsort|Sort an array using a &quot;natural order&quot; algorithm -|bool(array &$array)|
ncurses_addch|Add character at current position and advance cursor  -|int(int $ch)|
ncurses_addchnstr|Add attributed string with specified length at current position  -|int(string $s , int $n)|
ncurses_addchstr|Add attributed string at current position  -|int(string $s)|
ncurses_addnstr|Add string with specified length at current position  -|int(string $s , int $n)|
ncurses_addstr|Output text at current position  -|int(string $text)|
ncurses_attroff|Turn off the given attributes -|int(int $attributes)|
ncurses_attron|Turn on the given attributes -|int(int $attributes)|
ncurses_attrset|Set given attributes -|int(int $attributes)|
ncurses_baudrate|Returns baudrate of terminal  -|int(void)|
ncurses_beep|Let the terminal beep  -|int(void)|
ncurses_bkgd|Set background property for terminal screen  -|int(int $attrchar)|
ncurses_bkgdset|Control screen background  -|void(int $attrchar)|
ncurses_border|Draw a border around the screen using attributed characters -|int(int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner)|
ncurses_bottom_panel|Moves a visible panel to the bottom of the stack -|int(resource $panel)|
ncurses_can_change_color|Checks if terminal color definitions can be changed -|bool(void)|
ncurses_cbreak|Switch of input buffering  -|bool(void)|
ncurses_clear|Clear screen  -|bool(void)|
ncurses_clrtobot|Clear screen from current position to bottom  -|bool(void)|
ncurses_clrtoeol|Clear screen from current position to end of line  -|bool(void)|
ncurses_color_content|Retrieves RGB components of a color -|int(int $color , int &$r , int &$g , int &$b)|
ncurses_curs_set|Set cursor state  -|int(int $visibility)|
ncurses_def_prog_mode|Saves terminals (program) mode -|bool(void)|
ncurses_def_shell_mode|Saves terminals (shell) mode -|bool(void)|
ncurses_define_key|Define a keycode  -|int(string $definition , int $keycode)|
ncurses_del_panel|Remove panel from the stack and delete it (but not the associated window) -|bool(resource $panel)|
ncurses_delay_output|Delay output on terminal using padding characters  -|int(int $milliseconds)|
ncurses_delch|Delete character at current position, move rest of line left  -|bool(void)|
ncurses_deleteln|Delete line at current position, move rest of screen up  -|bool(void)|
ncurses_delwin|Delete a ncurses window  -|bool(resource $window)|
ncurses_doupdate|Write all prepared refreshes to terminal  -|bool(void)|
ncurses_echo|Activate keyboard input echo  -|bool(void)|
ncurses_echochar|Single character output including refresh  -|int(int $character)|
ncurses_end|Stop using ncurses, clean up the screen  -|int(void)|
ncurses_erase|Erase terminal screen  -|bool(void)|
ncurses_erasechar|Returns current erase character  -|string(void)|
ncurses_filter|Set LINES for iniscr() and newterm() to 1 -|void(void)|
ncurses_flash|Flash terminal screen (visual bell)  -|bool(void)|
ncurses_flushinp|Flush keyboard input buffer  -|bool(void)|
ncurses_getch|Read a character from keyboard  -|int(void)|
ncurses_getmaxyx|Returns the size of a window -|void(resource $window , int &$y , int &$x)|
ncurses_getmouse|Reads mouse event -|bool(array &$mevent)|
ncurses_getyx|Returns the current cursor position for a window -|void(resource $window , int &$y , int &$x)|
ncurses_halfdelay|Put terminal into halfdelay mode  -|int(int $tenth)|
ncurses_has_colors|Checks if terminal has color capabilities -|bool(void)|
ncurses_has_ic|Check for insert- and delete-capabilities  -|bool(void)|
ncurses_has_il|Check for line insert- and delete-capabilities  -|bool(void)|
ncurses_has_key|Check for presence of a function key on terminal keyboard  -|int(int $keycode)|
ncurses_hide_panel|Remove panel from the stack, making it invisible -|int(resource $panel)|
ncurses_hline|Draw a horizontal line at current position using an attributed character and max. n characters long  -|int(int $charattr , int $n)|
ncurses_inch|Get character and attribute at current position  -|string(void)|
ncurses_init|Initialize ncurses -|void(void)|
ncurses_init_color|Define a terminal color -|int(int $color , int $r , int $g , int $b)|
ncurses_init_pair|Define a color pair -|int(int $pair , int $fg , int $bg)|
ncurses_insch|Insert character moving rest of line including character at current position  -|int(int $character)|
ncurses_insdelln|Insert lines before current line scrolling down (negative numbers delete and scroll up)  -|int(int $count)|
ncurses_insertln|Insert a line, move rest of screen down  -|int(void)|
ncurses_insstr|Insert string at current position, moving rest of line right  -|int(string $text)|
ncurses_instr|Reads string from terminal screen -|int(string &$buffer)|
ncurses_isendwin|Ncurses is in endwin mode, normal screen output may be performed -|bool(void)|
ncurses_keyok|Enable or disable a keycode  -|int(int $keycode , bool $enable)|
ncurses_keypad|Turns keypad on or off -|int(resource $window , bool $bf)|
ncurses_killchar|Returns current line kill character  -|string(void)|
ncurses_longname|Returns terminals description -|string(void)|
ncurses_meta|Enables/Disable 8-bit meta key information -|int(resource $window , bool $8bit)|
ncurses_mouse_trafo|Transforms coordinates -|bool(int &$y , int &$x , bool $toscreen)|
ncurses_mouseinterval|Set timeout for mouse button clicks  -|int(int $milliseconds)|
ncurses_mousemask|Sets mouse options -|int(int $newmask , int &$oldmask)|
ncurses_move|Move output position  -|int(int $y , int $x)|
ncurses_move_panel|Moves a panel so that its upper-left corner is at [startx, starty] -|int(resource $panel , int $startx , int $starty)|
ncurses_mvaddch|Move current position and add character  -|int(int $y , int $x , int $c)|
ncurses_mvaddchnstr|Move position and add attributed string with specified length  -|int(int $y , int $x , string $s , int $n)|
ncurses_mvaddchstr|Move position and add attributed string  -|int(int $y , int $x , string $s)|
ncurses_mvaddnstr|Move position and add string with specified length  -|int(int $y , int $x , string $s , int $n)|
ncurses_mvaddstr|Move position and add string  -|int(int $y , int $x , string $s)|
ncurses_mvcur|Move cursor immediately  -|int(int $old_y , int $old_x , int $new_y , int $new_x)|
ncurses_mvdelch|Move position and delete character, shift rest of line left  -|int(int $y , int $x)|
ncurses_mvgetch|Move position and get character at new position  -|int(int $y , int $x)|
ncurses_mvhline|Set new position and draw a horizontal line using an attributed character and max. n characters long  -|int(int $y , int $x , int $attrchar , int $n)|
ncurses_mvinch|Move position and get attributed character at new position  -|int(int $y , int $x)|
ncurses_mvwaddstr|Add string at new position in window  -|int(resource $window , int $y , int $x , string $text)|
ncurses_napms|Sleep -|int(int $milliseconds)|
ncurses_new_panel|Create a new panel and associate it with window -|resource(resource $window)|
ncurses_newpad|Creates a new pad (window) -|resource(int $rows , int $cols)|
ncurses_newwin|Create a new window -|resource(int $rows , int $cols , int $y , int $x)|
ncurses_nl|Translate newline and carriage return / line feed  -|bool(void)|
ncurses_nocbreak|Switch terminal to cooked mode  -|bool(void)|
ncurses_noecho|Switch off keyboard input echo  -|bool(void)|
ncurses_nonl|Do not translate newline and carriage return / line feed  -|bool(void)|
ncurses_noqiflush|Do not flush on signal characters -|void(void)|
ncurses_noraw|Switch terminal out of raw mode  -|bool(void)|
ncurses_pair_content|Retrieves foreground and background colors of a color pair -|int(int $pair , int &$f , int &$b)|
ncurses_panel_above|Returns the panel above panel -|resource(resource $panel)|
ncurses_panel_below|Returns the panel below panel -|resource(resource $panel)|
ncurses_panel_window|Returns the window associated with panel -|resource(resource $panel)|
ncurses_pnoutrefresh|Copies a region from a pad into the virtual screen -|int(resource $pad , int $pminrow , int $pmincol , int $sminrow , int $smincol , int $smaxrow , int $smaxcol)|
ncurses_prefresh|Copies a region from a pad into the virtual screen -|int(resource $pad , int $pminrow , int $pmincol , int $sminrow , int $smincol , int $smaxrow , int $smaxcol)|
ncurses_putp|Apply padding information to the string and output it -|int(string $text)|
ncurses_qiflush|Flush on signal characters  -|void(void)|
ncurses_raw|Switch terminal into raw mode  -|bool(void)|
ncurses_refresh|Refresh screen  -|int(int $ch)|
ncurses_replace_panel|Replaces the window associated with panel -|int(resource $panel , resource $window)|
ncurses_reset_prog_mode|Resets the prog mode saved by def_prog_mode -|int(void)|
ncurses_reset_shell_mode|Resets the shell mode saved by def_shell_mode -|int(void)|
ncurses_resetty|Restores saved terminal state  -|bool(void)|
ncurses_savetty|Saves terminal state  -|bool(void)|
ncurses_scr_dump|Dump screen content to file  -|int(string $filename)|
ncurses_scr_init|Initialize screen from file dump  -|int(string $filename)|
ncurses_scr_restore|Restore screen from file dump  -|int(string $filename)|
ncurses_scr_set|Inherit screen from file dump  -|int(string $filename)|
ncurses_scrl|Scroll window content up or down without changing current position  -|int(int $count)|
ncurses_show_panel|Places an invisible panel on top of the stack, making it visible -|int(resource $panel)|
ncurses_slk_attr|Returns current soft label key attribute -|int(void)|
ncurses_slk_attroff|Turn off the given attributes for soft function-key labels -|int(int $intarg)|
ncurses_slk_attron|Turn on the given attributes for soft function-key labels -|int(int $intarg)|
ncurses_slk_attrset|Set given attributes for soft function-key labels -|int(int $intarg)|
ncurses_slk_clear|Clears soft labels from screen -|bool(void)|
ncurses_slk_init|Initializes soft label key functions -|bool(int $format)|
ncurses_slk_noutrefresh|Copies soft label keys to virtual screen -|bool(void)|
ncurses_slk_refresh|Copies soft label keys to screen -|int(void)|
ncurses_slk_restore|Restores soft label keys -|int(void)|
ncurses_slk_set|Sets function key labels -|bool(int $labelnr , string $label , int $format)|
ncurses_slk_touch|Forces output when ncurses_slk_noutrefresh is performed -|int(void)|
ncurses_standend|Stop using &#039;standout&#039; attribute  -|int(void)|
ncurses_standout|Start using &#039;standout&#039; attribute  -|int(void)|
ncurses_start_color|Initializes color functionality -|int(void)|
ncurses_termattrs|Returns a logical OR of all attribute flags supported by terminal  -|bool(void)|
ncurses_termname|Returns terminals (short)-name -|string(void)|
ncurses_timeout|Set timeout for special key sequences  -|void(int $millisec)|
ncurses_top_panel|Moves a visible panel to the top of the stack -|int(resource $panel)|
ncurses_typeahead|Specify different filedescriptor for typeahead checking  -|int(int $fd)|
ncurses_ungetch|Put a character back into the input stream  -|int(int $keycode)|
ncurses_ungetmouse|Pushes mouse event to queue -|bool(array $mevent)|
ncurses_update_panels|Refreshes the virtual screen to reflect the relations between panels in the stack -|void(void)|
ncurses_use_default_colors|Assign terminal default colors to color id -1  -|bool(void)|
ncurses_use_env|Control use of environment information about terminal size  -|void(bool $flag)|
ncurses_vidattr|Display the string on the terminal in the video attribute mode -|int(int $intarg)|
ncurses_vline|Draw a vertical line at current position using an attributed character and max. n characters long  -|int(int $charattr , int $n)|
ncurses_waddch|Adds character at current position in a window and advance cursor -|int(resource $window , int $ch)|
ncurses_waddstr|Outputs text at current postion in window -|int(resource $window , string $str [, int $n ])|
ncurses_wattroff|Turns off attributes for a window -|int(resource $window , int $attrs)|
ncurses_wattron|Turns on attributes for a window -|int(resource $window , int $attrs)|
ncurses_wattrset|Set the attributes for a window -|int(resource $window , int $attrs)|
ncurses_wborder|Draws a border around the window using attributed characters -|int(resource $window , int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner)|
ncurses_wclear|Clears window -|int(resource $window)|
ncurses_werase|Erase window contents -|int(resource $window)|
ncurses_wgetch|Reads a character from keyboard (window) -|int(resource $window)|
ncurses_whline|Draws a horizontal line in a window at current position using an attributed character and max. n characters long -|int(resource $window , int $charattr , int $n)|
ncurses_wmouse_trafo|Transforms window/stdscr coordinates -|bool(resource $window , int &$y , int &$x , bool $toscreen)|
ncurses_wmove|Moves windows output position -|int(resource $window , int $y , int $x)|
ncurses_wnoutrefresh|Copies window to virtual screen -|int(resource $window)|
ncurses_wrefresh|Refresh window on terminal screen  -|int(resource $window)|
ncurses_wstandend|End standout mode for a window -|int(resource $window)|
ncurses_wstandout|Enter standout mode for a window -|int(resource $window)|
ncurses_wvline|Draws a vertical line in a window at current position using an attributed character and max. n characters long -|int(resource $window , int $charattr , int $n)|
next|Advance the internal array pointer of an array -|mixed(array &$array)|
ngettext|Plural version of gettext -|string(string $msgid1 , string $msgid2 , int $n)|
nl2br|Inserts HTML line breaks before all newlines in a string -|string(string $string [, bool $is_xhtml = true ])|
nl_langinfo|Query language and locale information -|string(int $item)|
number_format|Format a number with grouped thousands -|string(float $number [, int $decimals = 0 ])|
ob_clean|Clean (erase) the output buffer -|void(void)|
ob_end_clean|Clean (erase) the output buffer and turn off output buffering -|bool(void)|
ob_end_flush|Flush (send) the output buffer and turn off output buffering -|bool(void)|
ob_flush|Flush (send) the output buffer -|void(void)|
ob_get_clean|Get current buffer contents and delete current output buffer -|string(void)|
ob_get_contents|Return the contents of the output buffer -|string(void)|
ob_get_flush|Flush the output buffer, return it as a string and turn off output buffering -|string(void)|
ob_get_length|Return the length of the output buffer -|int(void)|
ob_get_level|Return the nesting level of the output buffering mechanism -|int(void)|
ob_get_status|Get status of output buffers -|array([ bool $full_status = FALSE ])|
ob_gzhandler|ob_start callback function to gzip output buffer -|string(string $buffer , int $mode)|
ob_iconv_handler|Convert character encoding as output buffer handler -|string(string $contents , int $status)|
ob_implicit_flush|Turn implicit flush on/off -|void([ int $flag = true ])|
ob_list_handlers|List all output handlers in use -|array(void)|
ob_start|Turn on output buffering -|bool([ callback $output_callback [, int $chunk_size = 0 [, bool $erase = true ]]])|
octdec|Octal to decimal -|number(string $octal_string)|
opendir|Open directory handle -|resource(string $path [, resource $context ])|
openlog|Open connection to system logger -|bool(string $ident , int $option , int $facility)|
openssl_cipher_iv_length|Gets the cipher iv length -|int(string $method)|
openssl_csr_export|Exports a CSR as a string -|bool(resource $csr , string &$out [, bool $notext = true ])|
openssl_csr_export_to_file|Exports a CSR to a file -|bool(resource $csr , string $outfilename [, bool $notext = true ])|
openssl_csr_get_public_key|Returns the public key of a CERT -|resource(mixed $csr [, bool $use_shortnames = true ])|
openssl_csr_get_subject|Returns the subject of a CERT -|array(mixed $csr [, bool $use_shortnames = true ])|
openssl_csr_new|Generates a CSR -|mixed(array $dn , resource &$privkey [, array $configargs [, array $extraattribs ]])|
openssl_csr_sign|Sign a CSR with another certificate (or itself) and generate a certificate -|resource(mixed $csr , mixed $cacert , mixed $priv_key , int $days [, array $configargs [, int $serial = 0 ]])|
openssl_decrypt|Decrypts data -|string(string $data , string $method , string $password [, bool $raw_input = false [, string $iv = &quot;&quot; ]])|
openssl_dh_compute_key|Computes shared secret for public value of remote DH key and local DH key -|string(string $pub_key , resource $dh_key)|
openssl_digest|Computes a digest -|string(string $data , string $method [, bool $raw_output = false ])|
openssl_encrypt|Encrypts data -|string(string $data , string $method , string $password [, bool $raw_output = false [, string $iv = &quot;&quot; ]])|
openssl_error_string|Return openSSL error message -|string(void)|
openssl_free_key|Free key resource -|void(resource $key_identifier)|
openssl_get_cipher_methods|Gets available cipher methods -|array([ bool $aliases = false ])|
openssl_get_md_methods|Gets available digest methods -|array([ bool $aliases = false ])|
openssl_get_privatekey|Alias of openssl_pkey_get_private() -||
openssl_get_publickey|Alias of openssl_pkey_get_public() -||
openssl_open|Open sealed data -|bool(string $sealed_data , string &$open_data , string $env_key , mixed $priv_key_id [, string $method ])|
openssl_pkcs12_export|Exports a PKCS#12 Compatible Certificate Store File to variable. -|bool(mixed $x509 , string &$out , mixed $priv_key , string $pass [, array $args ])|
openssl_pkcs12_export_to_file|Exports a PKCS#12 Compatible Certificate Store File -|bool(mixed $x509 , string $filename , mixed $priv_key , string $pass [, array $args ])|
openssl_pkcs12_read|Parse a PKCS#12 Certificate Store into an array -|bool(string $pkcs12 , array &$certs , string $pass)|
openssl_pkcs7_decrypt|Decrypts an S/MIME encrypted message -|bool(string $infilename , string $outfilename , mixed $recipcert [, mixed $recipkey ])|
openssl_pkcs7_encrypt|Encrypt an S/MIME message -|bool(string $infile , string $outfile , mixed $recipcerts , array $headers [, int $flags = 0 [, int $cipherid = OPENSSL_CIPHER_RC2_40 ]])|
openssl_pkcs7_sign|Sign an S/MIME message -|bool(string $infilename , string $outfilename , mixed $signcert , mixed $privkey , array $headers [, int $flags = PKCS7_DETACHED [, string $extracerts ]])|
openssl_pkcs7_verify|Verifies the signature of an S/MIME signed message -|mixed(string $filename , int $flags [, string $outfilename [, array $cainfo [, string $extracerts [, string $content ]]]])|
openssl_pkey_export|Gets an exportable representation of a key into a string -|bool(mixed $key , string &$out [, string $passphrase [, array $configargs ]])|
openssl_pkey_export_to_file|Gets an exportable representation of a key into a file  -|bool(mixed $key , string $outfilename [, string $passphrase [, array $configargs ]])|
openssl_pkey_free|Frees a private key -|void(resource $key)|
openssl_pkey_get_details|Returns an array with the key details -|array(resource $key)|
openssl_pkey_get_private|Get a private key -|resource(mixed $key [, string $passphrase = &quot;&quot; ])|
openssl_pkey_get_public|Extract public key from certificate and prepare it for use -|resource(mixed $certificate)|
openssl_pkey_new|Generates a new private key  -|resource([ array $configargs ])|
openssl_private_decrypt|Decrypts data with private key  -|bool(string $data , string &$decrypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ])|
openssl_private_encrypt|Encrypts data with private key  -|bool(string $data , string &$crypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ])|
openssl_public_decrypt|Decrypts data with public key  -|bool(string $data , string &$decrypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ])|
openssl_public_encrypt|Encrypts data with public key  -|bool(string $data , string &$crypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ])|
openssl_random_pseudo_bytes|Generate a pseudo-random string of bytes -|string(int $length [, bool &$crypto_strong ])|
openssl_seal|Seal (encrypt) data -|int(string $data , string &$sealed_data , array &$env_keys , array $pub_key_ids [, string $method ])|
openssl_sign|Generate signature -|bool(string $data , string &$signature , mixed $priv_key_id [, int $signature_alg = OPENSSL_ALGO_SHA1 ])|
openssl_verify|Verify signature -|int(string $data , string $signature , mixed $pub_key_id [, int $signature_alg = OPENSSL_ALGO_SHA1 ])|
openssl_x509_check_private_key|Checks if a private key corresponds to a certificate -|bool(mixed $cert , mixed $key)|
openssl_x509_checkpurpose|Verifies if a certificate can be used for a particular purpose -|int(mixed $x509cert , int $purpose [, array $cainfo = array() [, string $untrustedfile ]])|
openssl_x509_export|Exports a certificate as a string -|bool(mixed $x509 , string &$output [, bool $notext = TRUE ])|
openssl_x509_export_to_file|Exports a certificate to file -|bool(mixed $x509 , string $outfilename [, bool $notext = TRUE ])|
openssl_x509_free|Free certificate resource -|void(resource $x509cert)|
openssl_x509_parse|Parse an X509 certificate and return the information as an array -|array(mixed $x509cert [, bool $shortnames = true ])|
openssl_x509_read|Parse an X.509 certificate and return a resource identifier for   it -|resource(mixed $x509certdata)|
ord|Return ASCII value of character -|int(string $string)|
output_add_rewrite_var|Add URL rewriter values -|bool(string $name , string $value)|
output_reset_rewrite_vars|Reset URL rewriter values -|bool(void)|
pack|Pack data into binary string -|string(string $format [, mixed $args [, mixed $... ]])|
parse_ini_file|Parse a configuration file -|array(string $filename [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL ]])|
parse_ini_string|Parse a configuration string -|array(string $ini [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL ]])|
parse_str|Parses the string into variables -|void(string $str [, array &$arr ])|
parse_url|Parse a URL and return its components -|mixed(string $url [, int $component = -1 ])|
passthru|Execute an external program and display raw output -|void(string $command [, int &$return_var ])|
pathinfo|Returns information about a file path -|mixed(string $path [, int $options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME ])|
pclose|Closes process file pointer -|int(resource $handle)|
pcntl_alarm|Set an alarm clock for delivery of a signal -|int(int $seconds)|
pcntl_exec|Executes specified program in current process space -|void(string $path [, array $args [, array $envs ]])|
pcntl_fork|Forks the currently running process -|int(void)|
pcntl_getpriority|Get the priority of any process -|int([ int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS ]])|
pcntl_setpriority|Change the priority of any process -|bool(int $priority [, int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS ]])|
pcntl_signal|Installs a signal handler -|bool(int $signo , callback $handler [, bool $restart_syscalls = true ])|
pcntl_signal_dispatch|Calls signal handlers for pending signals -|bool(void)|
pcntl_sigprocmask|Sets and retrieves blocked signals -|bool(int $how , array $set [, array &$oldset ])|
pcntl_sigtimedwait|Waits for signals, with a timeout -|int(array $set [, array &$siginfo [, int $seconds = 0 [, int $nanoseconds = 0 ]]])|
pcntl_sigwaitinfo|Waits for signals -|int(array $set [, array &$siginfo ])|
pcntl_wait|Waits on or returns the status of a forked child -|int(int &$status [, int $options = 0 ])|
pcntl_waitpid|Waits on or returns the status of a forked child -|int(int $pid , int &$status [, int $options = 0 ])|
pcntl_wexitstatus|Returns the return code of a terminated child -|int(int $status)|
pcntl_wifexited|Checks if status code represents a normal exit -|bool(int $status)|
pcntl_wifsignaled|Checks whether the status code represents a termination due to a signal -|bool(int $status)|
pcntl_wifstopped|Checks whether the child process is currently stopped -|bool(int $status)|
pcntl_wstopsig|Returns the signal which caused the child to stop -|int(int $status)|
pcntl_wtermsig|Returns the signal which caused the child to terminate -|int(int $status)|
pfsockopen|Open persistent Internet or Unix domain socket connection -|resource(string $hostname [, int $port = -1 [, int &$errno [, string &$errstr [, float $timeout = ini_get(&quot;default_socket_timeout&quot;) ]]]])|
pg_affected_rows|Returns number of affected records (tuples) -|int(resource $result)|
pg_cancel_query|    Cancel an asynchronous query    -|bool(resource $connection)|
pg_client_encoding|    Gets the client encoding    -|string([ resource $connection ])|
pg_close|Closes a PostgreSQL connection -|bool([ resource $connection ])|
pg_connect|Open a PostgreSQL connection -|resource(string $connection_string [, int $connect_type ])|
pg_connection_busy|    Get connection is busy or not    -|bool(resource $connection)|
pg_connection_reset|    Reset connection (reconnect)    -|bool(resource $connection)|
pg_connection_status|    Get connection status    -|int(resource $connection)|
pg_convert|    Convert associative array values into suitable for SQL statement    -|array(resource $connection , string $table_name , array $assoc_array [, int $options = 0 ])|
pg_copy_from|    Insert records into a table from an array    -|bool(resource $connection , string $table_name , array $rows [, string $delimiter [, string $null_as ]])|
pg_copy_to|    Copy a table to an array    -|array(resource $connection , string $table_name [, string $delimiter [, string $null_as ]])|
pg_dbname|Get the database name -|string([ resource $connection ])|
pg_delete|    Deletes records    -|mixed(resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ])|
pg_end_copy|Sync with PostgreSQL backend -|bool([ resource $connection ])|
pg_escape_bytea|    Escape a string for insertion into a bytea field    -|string([ resource $connection ], string $data)|
pg_escape_string|    Escape a string for insertion into a text field    -|string([ resource $connection ], string $data)|
pg_execute|Sends a request to execute a prepared statement with given parameters, and waits for the result. -|resource([ resource $connection ], string $stmtname , array $params)|
pg_fetch_all|Fetches all rows from a result as an array -|array(resource $result)|
pg_fetch_all_columns|Fetches all rows in a particular result column as an array -|array(resource $result [, int $column = 0 ])|
pg_fetch_array|Fetch a row as an array -|array(resource $result [, int $row [, int $result_type = PGSQL_BOTH ]])|
pg_fetch_assoc|Fetch a row as an associative array -|array(resource $result [, int $row ])|
pg_fetch_object|Fetch a row as an object -|object(resource $result [, int $row [, int $result_type = PGSQL_ASSOC ]])|
pg_fetch_result|Returns values from a result resource -|string(resource $result , int $row , mixed $field)|
pg_fetch_row|Get a row as an enumerated array -|array(resource $result [, int $row ])|
pg_field_is_null|Test if a field is SQL NULL -|int(resource $result , int $row , mixed $field)|
pg_field_name|Returns the name of a field -|string(resource $result , int $field_number)|
pg_field_num|Returns the field number of the named field -|int(resource $result , string $field_name)|
pg_field_prtlen|Returns the printed length -|int(resource $result , int $row_number , mixed $field_name_or_number)|
pg_field_size|    Returns the internal storage size of the named field    -|int(resource $result , int $field_number)|
pg_field_table|Returns the name or oid of the tables field -|mixed(resource $result , int $field_number [, bool $oid_only = false ])|
pg_field_type|    Returns the type name for the corresponding field number    -|string(resource $result , int $field_number)|
pg_field_type_oid|    Returns the type ID (OID) for the corresponding field number    -|int(resource $result , int $field_number)|
pg_free_result|Free result memory -|bool(resource $result)|
pg_get_notify|Gets SQL NOTIFY message -|array(resource $connection [, int $result_type ])|
pg_get_pid|Gets the backend&#039;s process ID -|int(resource $connection)|
pg_get_result|    Get asynchronous query result    -|resource([ resource $connection ])|
pg_host|    Returns the host name associated with the connection    -|string([ resource $connection ])|
pg_insert|    Insert array into table    -|mixed(resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ])|
pg_last_error|Get the last error message string of a connection -|string([ resource $connection ])|
pg_last_notice|    Returns the last notice message from PostgreSQL server    -|string(resource $connection)|
pg_last_oid|Returns the last row&#039;s OID -|string(resource $result)|
pg_lo_close|Close a large object -|bool(resource $large_object)|
pg_lo_create|Create a large object -|int([ resource $connection [, mixed $object_id ]])|
pg_lo_export|Export a large object to file -|bool([ resource $connection ], int $oid , string $pathname)|
pg_lo_import|Import a large object from file -|int([ resource $connection ], string $pathname [, mixed $object_id ])|
pg_lo_open|Open a large object -|resource(resource $connection , int $oid , string $mode)|
pg_lo_read|Read a large object -|string(resource $large_object [, int $len = 8192 ])|
pg_lo_read_all|    Reads an entire large object and send straight to browser    -|int(resource $large_object)|
pg_lo_seek|    Seeks position within a large object    -|bool(resource $large_object , int $offset [, int $whence = PGSQL_SEEK_CUR ])|
pg_lo_tell|    Returns current seek position a of large object    -|int(resource $large_object)|
pg_lo_unlink|Delete a large object -|bool(resource $connection , int $oid)|
pg_lo_write|Write to a large object -|int(resource $large_object , string $data [, int $len ])|
pg_meta_data|    Get meta data for table    -|array(resource $connection , string $table_name)|
pg_num_fields|Returns the number of fields in a result -|int(resource $result)|
pg_num_rows|Returns the number of rows in a result -|int(resource $result)|
pg_options|Get the options associated with the connection -|string([ resource $connection ])|
pg_parameter_status|Looks up a current parameter setting of the server. -|string([ resource $connection ], string $param_name)|
pg_pconnect|Open a persistent PostgreSQL connection -|resource(string $connection_string [, int $connect_type ])|
pg_ping|Ping database connection -|bool([ resource $connection ])|
pg_port|    Return the port number associated with the connection    -|int([ resource $connection ])|
pg_prepare| Submits a request to create a prepared statement with the    given parameters, and waits for completion. -|resource([ resource $connection ], string $stmtname , string $query)|
pg_put_line|Send a NULL-terminated string to PostgreSQL backend -|bool([ resource $connection ], string $data)|
pg_query|Execute a query -|resource([ resource $connection ], string $query)|
pg_query_params|Submits a command to the server and waits for the result, with the ability to pass parameters separately from the SQL command text. -|resource([ resource $connection ], string $query , array $params)|
pg_result_error|    Get error message associated with result    -|string(resource $result)|
pg_result_error_field|Returns an individual field of an error report. -|string(resource $result , int $fieldcode)|
pg_result_seek|Set internal row offset in result resource -|bool(resource $result , int $offset)|
pg_result_status|    Get status of query result    -|mixed(resource $result [, int $type = PGSQL_STATUS_LONG ])|
pg_select|    Select records    -|mixed(resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ])|
pg_send_execute|Sends a request to execute a prepared statement with given parameters, without waiting for the result(s). -|bool(resource $connection , string $stmtname , array $params)|
pg_send_prepare|Sends a request to create a prepared statement with the given parameters, without waiting for completion. -|bool(resource $connection , string $stmtname , string $query)|
pg_send_query|    Sends asynchronous query    -|bool(resource $connection , string $query)|
pg_send_query_params|Submits a command and separate parameters to the server without waiting for the result(s). -|bool(resource $connection , string $query , array $params)|
pg_set_client_encoding|    Set the client encoding    -|int([ resource $connection ], string $encoding)|
pg_set_error_verbosity|    Determines the verbosity of messages returned by pg_last_error()     and pg_result_error().    -|int([ resource $connection ], int $verbosity)|
pg_trace|Enable tracing a PostgreSQL connection -|bool(string $pathname [, string $mode = &quot;w&quot; [, resource $connection ]])|
pg_transaction_status|Returns the current in-transaction status of the server. -|int(resource $connection)|
pg_tty|    Return the TTY name associated with the connection    -|string([ resource $connection ])|
pg_unescape_bytea|    Unescape binary for bytea type    -|string(string $data)|
pg_untrace|Disable tracing of a PostgreSQL connection -|bool([ resource $connection ])|
pg_update|    Update table    -|mixed(resource $connection , string $table_name , array $data , array $condition [, int $options = PGSQL_DML_EXEC ])|
pg_version|    Returns an array with client, protocol and server version (when available)    -|array([ resource $connection ])|
php_ini_loaded_file|Retrieve a path to the loaded php.ini file -|string(void)|
php_ini_scanned_files|Return a list of .ini files parsed from the additional ini dir -|string(void)|
php_logo_guid|Gets the logo guid -|string(void)|
php_sapi_name|Returns the type of interface between web server and PHP -|string(void)|
php_strip_whitespace|Return source with stripped comments and whitespace -|string(string $filename)|
php_uname|Returns information about the operating system PHP is running on -|string([ string $mode = &quot;a&quot; ])|
phpcredits|Prints out the credits for PHP -|bool([ int $flag = CREDITS_ALL ])|
phpinfo|Outputs information about PHP&#039;s configuration -|bool([ int $what = INFO_ALL ])|
phpversion|Gets the current PHP version -|string([ string $extension ])|
pi|Get value of pi -|float(void)|
png2wbmp|Convert PNG image file to WBMP image file -|bool(string $pngname , string $wbmpname , int $dest_height , int $dest_width , int $threshold)|
popen|Opens process file pointer -|resource(string $command , string $mode)|
pos|Alias of current() -||
posix_access|    Determine accessibility of a file    -|bool(string $file [, int $mode = POSIX_F_OK ])|
posix_ctermid|Get path name of controlling terminal -|string(void)|
posix_errno|Alias of posix_get_last_error() -||
posix_get_last_error|Retrieve the error number set by the last posix function that failed -|int(void)|
posix_getcwd|Pathname of current directory -|string(void)|
posix_getegid|Return the effective group ID of the current process -|int(void)|
posix_geteuid|Return the effective user ID of the current process -|int(void)|
posix_getgid|Return the real group ID of the current process -|int(void)|
posix_getgrgid|Return info about a group by group id -|array(int $gid)|
posix_getgrnam|Return info about a group by name -|array(string $name)|
posix_getgroups|Return the group set of the current process -|array(void)|
posix_getlogin|Return login name -|string(void)|
posix_getpgid|Get process group id for job control -|int(int $pid)|
posix_getpgrp|Return the current process group identifier -|int(void)|
posix_getpid|Return the current process identifier -|int(void)|
posix_getppid|Return the parent process identifier -|int(void)|
posix_getpwnam|Return info about a user by username -|array(string $username)|
posix_getpwuid|Return info about a user by user id -|array(int $uid)|
posix_getrlimit|Return info about system resource limits -|array(void)|
posix_getsid|Get the current sid of the process -|int(int $pid)|
posix_getuid|Return the real user ID of the current process -|int(void)|
posix_initgroups|Calculate the group access list -|bool(string $name , int $base_group_id)|
posix_isatty|Determine if a file descriptor is an interactive terminal -|bool(int $fd)|
posix_kill|Send a signal to a process -|bool(int $pid , int $sig)|
posix_mkfifo|Create a fifo special file (a named pipe) -|bool(string $pathname , int $mode)|
posix_mknod|    Create a special or ordinary file (POSIX.1)    -|bool(string $pathname , int $mode [, int $major = 0 [, int $minor = 0 ]])|
posix_setegid|Set the effective GID of the current process -|bool(int $gid)|
posix_seteuid|Set the effective UID of the current process -|bool(int $uid)|
posix_setgid|Set the GID of the current process -|bool(int $gid)|
posix_setpgid|Set process group id for job control -|bool(int $pid , int $pgid)|
posix_setsid|Make the current process a session leader -|int(void)|
posix_setuid|Set the UID of the current process -|bool(int $uid)|
posix_strerror|Retrieve the system error message associated with the given errno -|string(int $errno)|
posix_times|Get process times -|array(void)|
posix_ttyname|Determine terminal device name -|string(int $fd)|
posix_uname|Get system name -|array(void)|
pow|Exponential expression -|number(number $base , number $exp)|
preg_filter|Perform a regular expression search and replace -|mixed(mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]])|
preg_grep|Return array entries that match the pattern -|array(string $pattern , array $input [, int $flags = 0 ])|
preg_last_error|Returns the error code of the last PCRE regex execution -|int(void)|
preg_match|Perform a regular expression match -|int(string $pattern , string $subject [, array &$matches [, int $flags = 0 [, int $offset = 0 ]]])|
preg_match_all|Perform a global regular expression match -|int(string $pattern , string $subject [, array &$matches [, int $flags = PREG_PATTERN_ORDER [, int $offset = 0 ]]])|
preg_quote|Quote regular expression characters -|string(string $str [, string $delimiter = NULL ])|
preg_replace|Perform a regular expression search and replace -|mixed(mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]])|
preg_replace_callback|Perform a regular expression search and replace using a callback -|mixed(mixed $pattern , callback $callback , mixed $subject [, int $limit = -1 [, int &$count ]])|
preg_split|Split string by a regular expression -|array(string $pattern , string $subject [, int $limit = -1 [, int $flags = 0 ]])|
prev|Rewind the internal array pointer -|mixed(array &$array)|
print_r|    Prints human-readable information about a variable    -|mixed(mixed $expression [, bool $return = false ])|
printf|Output a formatted string -|int(string $format [, mixed $args [, mixed $... ]])|
proc_close|Close a process opened by proc_open() and return the exit code of that process -|int(resource $process)|
proc_get_status|Get information about a process opened by proc_open() -|array(resource $process)|
proc_nice|Change the priority of the current process -|bool(int $increment)|
proc_open|      Execute a command and open file pointers for input/output      -|resource(string $cmd , array $descriptorspec , array &$pipes [, string $cwd [, array $env [, array $other_options ]]])|
proc_terminate|Kills a process opened by proc_open -|bool(resource $process [, int $signal = 15 ])|
property_exists|    Checks if the object or class has a property    -|bool(mixed $class , string $property)|
putenv|Sets the value of an environment variable -|bool(string $setting)|
quoted_printable_decode|Convert a quoted-printable string to an 8 bit string -|string(string $str)|
quoted_printable_encode|Convert a 8 bit string to a quoted-printable string -|string(string $str)|
quotemeta|Quote meta characters -|string(string $str)|
rad2deg|    Converts the radian number to the equivalent number in degrees    -|float(float $number)|
radius_acct_open|Creates a Radius handle for accounting -|resource(void)|
radius_add_server|Adds a server -|bool(resource $radius_handle , string $hostname , int $port , string $secret , int $timeout , int $max_tries)|
radius_auth_open|Creates a Radius handle for authentication -|resource(void)|
radius_close|Frees all ressources -|bool(resource $radius_handle)|
radius_config|Causes the library to read the given configuration file -|bool(resource $radius_handle , string $file)|
radius_create_request|Create accounting or authentication request -|bool(resource $radius_handle , int $type)|
radius_cvt_addr|Converts raw data to IP-Address -|string(string $data)|
radius_cvt_int|Converts raw data to integer -|int(string $data)|
radius_cvt_string|Converts raw data to string -|string(string $data)|
radius_demangle|Demangles data -|string(resource $radius_handle , string $mangled)|
radius_demangle_mppe_key|Derives mppe-keys from mangled data -|string(resource $radius_handle , string $mangled)|
radius_get_attr|Extracts an attribute -|mixed(resource $radius_handle)|
radius_get_vendor_attr|Extracts a vendor specific attribute -|array(string $data)|
radius_put_addr|Attaches an IP-Address attribute -|bool(resource $radius_handle , int $type , string $addr)|
radius_put_attr|Attaches a binary attribute -|bool(resource $radius_handle , int $type , string $value)|
radius_put_int|Attaches an integer attribute -|bool(resource $radius_handle , int $type , int $value)|
radius_put_string|Attaches a string attribute -|bool(resource $radius_handle , int $type , string $value)|
radius_put_vendor_addr|Attaches a vendor specific IP-Address attribute -|bool(resource $radius_handle , int $vendor , int $type , string $addr)|
radius_put_vendor_attr|Attaches a vendor specific binary attribute -|bool(resource $radius_handle , int $vendor , int $type , string $value)|
radius_put_vendor_int|Attaches a vendor specific integer attribute -|bool(resource $radius_handle , int $vendor , int $type , int $value)|
radius_put_vendor_string|Attaches a vendor specific string attribute -|bool(resource $radius_handle , int $vendor , int $type , string $value)|
radius_request_authenticator|Returns the request authenticator -|string(resource $radius_handle)|
radius_send_request|Sends the request and waites for a reply -|int(resource $radius_handle)|
radius_server_secret|Returns the shared secret -|string(resource $radius_handle)|
radius_strerror|Returns an error message -|string(resource $radius_handle)|
rand|Generate a random integer -|int(void)|
range|Create an array containing a range of elements -|array(mixed $start , mixed $limit [, number $step = 1 ])|
rawurldecode|Decode URL-encoded strings -|string(string $str)|
rawurlencode|URL-encode according to RFC 3986 -|string(string $str)|
read_exif_data|Alias of exif_read_data() -||
readdir|Read entry from directory handle -|string([ resource $dir_handle ])|
readfile|Outputs a file -|int(string $filename [, bool $use_include_path = false [, resource $context ]])|
readgzfile|Output a gz-file -|int(string $filename [, int $use_include_path = 0 ])|
readlink|Returns the target of a symbolic link -|string(string $path)|
realpath|Returns canonicalized absolute pathname -|string(string $path)|
realpath_cache_get|Get realpath cache entries -|array(void)|
realpath_cache_size|Get realpath cache size -|int(void)|
register_shutdown_function|Register a function for execution on shutdown -|void(callback $function [, mixed $parameter [, mixed $... ]])|
register_tick_function|Register a function for execution on each tick -|bool(callback $function [, mixed $arg [, mixed $... ]])|
rename|Renames a file or directory -|bool(string $oldname , string $newname [, resource $context ])|
reset|Set the internal pointer of an array to its first element -|mixed(array &$array)|
restore_error_handler|Restores the previous error handler function -|bool(void)|
restore_exception_handler|    Restores the previously defined exception handler function    -|bool(void)|
restore_include_path|Restores the value of the include_path configuration option -|void(void)|
rewind|Rewind the position of a file pointer -|bool(resource $handle)|
rewinddir|Rewind directory handle -|void([ resource $dir_handle ])|
rmdir|Removes directory -|bool(string $dirname [, resource $context ])|
round|Rounds a float -|float(float $val [, int $precision = 0 [, int $mode = PHP_ROUND_HALF_UP ]])|
rsort|Sort an array in reverse order -|bool(array &$array [, int $sort_flags = SORT_REGULAR ])|
rtrim|Strip whitespace (or other characters) from the end of a string -|string(string $str [, string $charlist ])|
scandir|List files and directories inside the specified path -|array(string $directory [, int $sorting_order = SCANDIR_SORT_ASCENDING [, resource $context ]])|
sem_acquire|Acquire a semaphore -|bool(resource $sem_identifier)|
sem_get|Get a semaphore id -|resource(int $key [, int $max_acquire = 1 [, int $perm = 0666 [, int $auto_release = 1 ]]])|
sem_release|Release a semaphore -|bool(resource $sem_identifier)|
sem_remove|Remove a semaphore -|bool(resource $sem_identifier)|
serialize|Generates a storable representation of a value -|string(mixed $value)|
session_cache_expire|Return current cache expire -|int([ string $new_cache_expire ])|
session_cache_limiter|Get and/or set the current cache limiter -|string([ string $cache_limiter ])|
session_commit|Alias of session_write_close() -||
session_decode|Decodes session data from a string -|bool(string $data)|
session_destroy|Destroys all data registered to a session -|bool(void)|
session_encode|Encodes the current session data as a string -|string(void)|
session_get_cookie_params|Get the session cookie parameters -|array(void)|
session_id|Get and/or set the current session id -|string([ string $id ])|
session_is_registered|Find out whether a global variable is registered in a session -|bool(string $name)|
session_module_name|Get and/or set the current session module -|string([ string $module ])|
session_name|Get and/or set the current session name -|string([ string $name ])|
session_regenerate_id|    Update the current session id with a newly generated one    -|bool([ bool $delete_old_session = false ])|
session_register|Register one or more global variables with the current session -|bool(mixed $name [, mixed $... ])|
session_save_path|Get and/or set the current session save path -|string([ string $path ])|
session_set_cookie_params|Set the session cookie parameters -|void(int $lifetime [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]])|
session_set_save_handler|Sets user-level session storage functions -|bool(callback $open , callback $close , callback $read , callback $write , callback $destroy , callback $gc)|
session_start|Initialize session data -|bool(void)|
session_unregister|Unregister a global variable from the current session -|bool(string $name)|
session_unset|Free all session variables -|void(void)|
session_write_close|Write session data and end session -|void(void)|
set_error_handler|Sets a user-defined error handler function -|mixed(callback $error_handler [, int $error_types = E_ALL | E_STRICT ])|
set_exception_handler|    Sets a user-defined exception handler function     -|callback(callback $exception_handler)|
set_file_buffer|Alias of stream_set_write_buffer() -||
set_include_path|Sets the include_path configuration option -|string(string $new_include_path)|
set_magic_quotes_runtime|Sets the current active configuration setting of magic_quotes_runtime -|bool(bool $new_setting)|
set_socket_blocking|Alias of stream_set_blocking() -||
set_time_limit|Limits the maximum execution time -|void(int $seconds)|
setcookie|Send a cookie -|bool(string $name [, string $value [, int $expire = 0 [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]]]])|
setlocale|Set locale information -|string(int $category , string $locale [, string $... ])|
setrawcookie|Send a cookie without urlencoding the cookie value -|bool(string $name [, string $value [, int $expire = 0 [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]]]])|
settype|Set the type of a variable -|bool(mixed &$var , string $type)|
sha1|Calculate the sha1 hash of a string -|string(string $str [, bool $raw_output = false ])|
sha1_file|Calculate the sha1 hash of a file -|string(string $filename [, bool $raw_output = false ])|
shell_exec|Execute command via shell and return the complete output as a string -|string(string $cmd)|
shm_attach|Creates or open a shared memory segment -|resource(int $key [, int $memsize [, int $perm = 0666 ]])|
shm_detach|Disconnects from shared memory segment -|bool(resource $shm_identifier)|
shm_get_var|Returns a variable from shared memory -|mixed(resource $shm_identifier , int $variable_key)|
shm_has_var|Check whether a specific entry exists -|bool(resource $shm_identifier , int $variable_key)|
shm_put_var|Inserts or updates a variable in shared memory -|bool(resource $shm_identifier , int $variable_key , mixed $variable)|
shm_remove|Removes shared memory from Unix systems -|bool(resource $shm_identifier)|
shm_remove_var|Removes a variable from shared memory    -|bool(resource $shm_identifier , int $variable_key)|
shmop_close|Close shared memory block -|void(int $shmid)|
shmop_delete|Delete shared memory block -|bool(int $shmid)|
shmop_open|Create or open shared memory block -|int(int $key , string $flags , int $mode , int $size)|
shmop_read|Read data from shared memory block -|string(int $shmid , int $start , int $count)|
shmop_size|Get size of shared memory block -|int(int $shmid)|
shmop_write|Write data into shared memory block -|int(int $shmid , string $data , int $offset)|
show_source|Alias of highlight_file() -||
shuffle|Shuffle an array -|bool(array &$array)|
similar_text|Calculate the similarity between two strings -|int(string $first , string $second [, float &$percent ])|
simplexml_import_dom|Get a SimpleXMLElement object from a DOM node. -|SimpleXMLElement(DOMNode $node [, string $class_name = &quot;SimpleXMLElement&quot; ])|
simplexml_load_file|    Interprets an XML file into an object    -|object(string $filename [, string $class_name = &quot;SimpleXMLElement&quot; [, int $options = 0 [, string $ns [, bool $is_prefix = false ]]]])|
simplexml_load_string|    Interprets a string of XML into an object    -|object(string $data [, string $class_name = &quot;SimpleXMLElement&quot; [, int $options = 0 [, string $ns [, bool $is_prefix = false ]]]])|
sin|Sine -|float(float $arg)|
sinh|Hyperbolic sine -|float(float $arg)|
sizeof|Alias of count() -||
sleep|Delay execution -|int(int $seconds)|
socket_accept|Accepts a connection on a socket -|resource(resource $socket)|
socket_bind|Binds a name to a socket -|bool(resource $socket , string $address [, int $port = 0 ])|
socket_clear_error|Clears the error on the socket or the last error code -|void([ resource $socket ])|
socket_close|Closes a socket resource -|void(resource $socket)|
socket_connect|Initiates a connection on a socket -|bool(resource $socket , string $address [, int $port = 0 ])|
socket_create|Create a socket (endpoint for communication) -|resource(int $domain , int $type , int $protocol)|
socket_create_listen|Opens a socket on port to accept connections  -|resource(int $port [, int $backlog = 128 ])|
socket_create_pair|Creates a pair of indistinguishable sockets and stores them in an array -|bool(int $domain , int $type , int $protocol , array &$fd)|
socket_get_option|Gets socket options for the socket  -|mixed(resource $socket , int $level , int $optname)|
socket_get_status|Alias of stream_get_meta_data() -||
socket_getpeername|Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type -|bool(resource $socket , string &$address [, int &$port ])|
socket_getsockname|Queries the local side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type -|bool(resource $socket , string &$addr [, int &$port ])|
socket_last_error|Returns the last error on the socket  -|int([ resource $socket ])|
socket_listen|Listens for a connection on a socket -|bool(resource $socket [, int $backlog = 0 ])|
socket_read|Reads a maximum of length bytes from a socket -|string(resource $socket , int $length [, int $type = PHP_BINARY_READ ])|
socket_recv|Receives data from a connected socket  -|int(resource $socket , string &$buf , int $len , int $flags)|
socket_recvfrom|Receives data from a socket whether or not it is connection-oriented -|int(resource $socket , string &$buf , int $len , int $flags , string &$name [, int &$port ])|
socket_select|Runs the select() system call on the given arrays of sockets with a specified timeout -|int(array &$read , array &$write , array &$except , int $tv_sec [, int $tv_usec = 0 ])|
socket_send|Sends data to a connected socket -|int(resource $socket , string $buf , int $len , int $flags)|
socket_sendto|Sends a message to a socket, whether it is connected or not  -|int(resource $socket , string $buf , int $len , int $flags , string $addr [, int $port = 0 ])|
socket_set_block|Sets blocking mode on a socket resource -|bool(resource $socket)|
socket_set_blocking|Alias of stream_set_blocking() -||
socket_set_nonblock|Sets nonblocking mode for file descriptor fd  -|bool(resource $socket)|
socket_set_option|Sets socket options for the socket -|bool(resource $socket , int $level , int $optname , mixed $optval)|
socket_set_timeout|Alias of stream_set_timeout() -||
socket_shutdown|Shuts down a socket for receiving, sending, or both -|bool(resource $socket [, int $how = 2 ])|
socket_strerror|Return a string describing a socket error -|string(int $errno)|
socket_write|Write to a socket -|int(resource $socket , string $buffer [, int $length = 0 ])|
sort|Sort an array -|bool(array &$array [, int $sort_flags = SORT_REGULAR ])|
soundex|Calculate the soundex key of a string -|string(string $str)|
spl_autoload|Default implementation for __autoload() -|void(string $class_name [, string $file_extensions = spl_autoload_extensions() ])|
spl_autoload_call|Try all registered __autoload() function to load the requested class -|void(string $class_name)|
spl_autoload_extensions|Register and return default file extensions for spl_autoload -|string([ string $file_extensions ])|
spl_autoload_functions|Return all registered __autoload() functions -|array(void)|
spl_autoload_register|Register given function as __autoload() implementation -|bool([ callback $autoload_function [, bool $throw = true [, bool $prepend = false ]]])|
spl_autoload_unregister|Unregister given function as __autoload() implementation -|bool(mixed $autoload_function)|
spl_classes|Return available SPL classes -|array(void)|
spl_object_hash|    Return hash id for given object    -|string(object $obj)|
split|Split string into array by regular expression -|array(string $pattern , string $string [, int $limit = -1 ])|
spliti|Split string into array by regular expression case insensitive -|array(string $pattern , string $string [, int $limit = -1 ])|
sprintf|Return a formatted string -|string(string $format [, mixed $args [, mixed $... ]])|
sql_regcase|Make regular expression for case insensitive match -|string(string $string)|
sqlite_array_query|Execute a query against a given database and returns an array -|array(resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]])|
sqlite_busy_timeout|Set busy timeout duration, or disable busy handlers -|void(resource $dbhandle , int $milliseconds)|
sqlite_changes|    Returns the number of rows that were changed by the most    recent SQL statement    -|int(resource $dbhandle)|
sqlite_close|Closes an open SQLite database -|void(resource $dbhandle)|
sqlite_column|Fetches a column from the current row of a result set -|mixed(resource $result , mixed $index_or_name [, bool $decode_binary = true ])|
sqlite_create_aggregate|Register an aggregating UDF for use in SQL statements -|void(resource $dbhandle , string $function_name , callback $step_func , callback $finalize_func [, int $num_args = -1 ])|
sqlite_create_function|    Registers a &quot;regular&quot; User Defined Function for use in SQL statements    -|void(resource $dbhandle , string $function_name , callback $callback [, int $num_args = -1 ])|
sqlite_current|Fetches the current row from a result set as an array -|array(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]])|
sqlite_error_string|Returns the textual description of an error code -|string(int $error_code)|
sqlite_escape_string|Escapes a string for use as a query parameter -|string(string $item)|
sqlite_exec|Executes a result-less query against a given database -|bool(resource $dbhandle , string $query [, string &$error_msg ])|
sqlite_factory|Opens an SQLite database and returns an SQLiteDatabase object -|SQLiteDatabase(string $filename [, int $mode = 0666 [, string &$error_message ]])|
sqlite_fetch_all|Fetches all rows from a result set as an array of arrays -|array(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]])|
sqlite_fetch_array|Fetches the next row from a result set as an array -|array(resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]])|
sqlite_fetch_column_types|    Return an array of column types from a particular table    -|array(string $table_name , resource $dbhandle [, int $result_type = SQLITE_ASSOC ])|
sqlite_fetch_object|Fetches the next row from a result set as an object -|object(resource $result [, string $class_name [, array $ctor_params [, bool $decode_binary = true ]]])|
sqlite_fetch_single|Fetches the first column of a result set as a string -|string(resource $result [, bool $decode_binary = true ])|
sqlite_fetch_string|Alias of sqlite_fetch_single() -||
sqlite_field_name|Returns the name of a particular field -|string(resource $result , int $field_index)|
sqlite_has_more|Finds whether or not more rows are available -|bool(resource $result)|
sqlite_has_prev|Returns whether or not a previous row is available -|bool(resource $result)|
sqlite_last_error|Returns the error code of the last error for a database -|int(resource $dbhandle)|
sqlite_last_insert_rowid|Returns the rowid of the most recently inserted row -|int(resource $dbhandle)|
sqlite_libencoding|Returns the encoding of the linked SQLite library -|string(void)|
sqlite_libversion|Returns the version of the linked SQLite library -|string(void)|
sqlite_next|Seek to the next row number -|bool(resource $result)|
sqlite_num_fields|Returns the number of fields in a result set -|int(resource $result)|
sqlite_num_rows|Returns the number of rows in a buffered result set -|int(resource $result)|
sqlite_open|Opens an SQLite database and create the database if it does not exist -|resource(string $filename [, int $mode = 0666 [, string &$error_message ]])|
sqlite_popen|    Opens a persistent handle to an SQLite database and create the database if it does not exist    -|resource(string $filename [, int $mode = 0666 [, string &$error_message ]])|
sqlite_prev|Seek to the previous row number of a result set -|bool(resource $result)|
sqlite_query|Executes a query against a given database and returns a result handle -|resource(resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, string &$error_msg ]])|
sqlite_rewind|Seek to the first row number -|bool(resource $result)|
sqlite_seek|Seek to a particular row number of a buffered result set -|bool(resource $result , int $rownum)|
sqlite_single_query|    Executes a query and returns either an array for one single column or the value of the first row    -|array(resource $db , string $query [, bool $first_row_only [, bool $decode_binary ]])|
sqlite_udf_decode_binary|Decode binary data passed as parameters to an UDF -|string(string $data)|
sqlite_udf_encode_binary|Encode binary data before returning it from an UDF -|string(string $data)|
sqlite_unbuffered_query|Execute a query that does not prefetch and buffer all data -|resource(resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, string &$error_msg ]])|
sqlite_valid|Returns whether more rows are available -|bool(resource $result)|
sqrt|Square root -|float(float $arg)|
srand|Seed the random number generator -|void([ int $seed ])|
sscanf|Parses input from a string according to a format -|mixed(string $str , string $format [, mixed &$... ])|
stat|Gives information about a file -|array(string $filename)|
str_getcsv|    Parse a CSV string into an array    -|array(string $input [, string $delimiter = &#039;,&#039; [, string $enclosure = &#039;&quot;&#039; [, string $escape = &#039;\\&#039; ]]])|
str_ireplace|Case-insensitive version of str_replace(). -|mixed(mixed $search , mixed $replace , mixed $subject [, int &$count ])|
str_pad|Pad a string to a certain length with another string -|string(string $input , int $pad_length [, string $pad_string = &quot; &quot; [, int $pad_type = STR_PAD_RIGHT ]])|
str_repeat|Repeat a string -|string(string $input , int $multiplier)|
str_replace|Replace all occurrences of the search string with the replacement string -|mixed(mixed $search , mixed $replace , mixed $subject [, int &$count ])|
str_rot13|Perform the rot13 transform on a string -|string(string $str)|
str_shuffle|Randomly shuffles a string -|string(string $str)|
str_split|Convert a string to an array -|array(string $string [, int $split_length = 1 ])|
str_word_count|    Return information about words used in a string    -|mixed(string $string [, int $format = 0 [, string $charlist ]])|
strcasecmp|Binary safe case-insensitive string comparison -|int(string $str1 , string $str2)|
strchr|Alias of strstr() -||
strcmp|Binary safe string comparison -|int(string $str1 , string $str2)|
strcoll|Locale based string comparison -|int(string $str1 , string $str2)|
strcspn|Find length of initial segment not matching mask -|int(string $str1 , string $str2 [, int $start [, int $length ]])|
stream_bucket_append|    Append bucket to brigade    -|void(resource $brigade , resource $bucket)|
stream_bucket_make_writeable|    Return a bucket object from the brigade for operating on    -|object(resource $brigade)|
stream_bucket_new|    Create a new bucket for use on the current stream    -|object(resource $stream , string $buffer)|
stream_bucket_prepend|    Prepend bucket to brigade    -|void(resource $brigade , resource $bucket)|
stream_context_create|Create a streams context -|resource([ array $options [, array $params ]])|
stream_context_get_default|Retreive the default streams context -|resource([ array $options ])|
stream_context_get_options|Retrieve options for a stream/wrapper/context -|array(resource $stream_or_context)|
stream_context_get_params|Retrieves parameters from a context -|array(resource $stream_or_context)|
stream_context_set_default|Set the default streams context -|resource(array $options)|
stream_context_set_option|Sets an option for a stream/wrapper/context -|bool(resource $stream_or_context , string $wrapper , string $option , mixed $value)|
stream_context_set_params|Set parameters for a stream/wrapper/context -|bool(resource $stream_or_context , array $params)|
stream_copy_to_stream|Copies data from one stream to another -|int(resource $source , resource $dest [, int $maxlength = -1 [, int $offset = 0 ]])|
stream_filter_append|Attach a filter to a stream -|resource(resource $stream , string $filtername [, int $read_write [, mixed $params ]])|
stream_filter_prepend|Attach a filter to a stream -|resource(resource $stream , string $filtername [, int $read_write [, mixed $params ]])|
stream_filter_register|Register a user defined stream filter -|bool(string $filtername , string $classname)|
stream_filter_remove|Remove a filter from a stream -|bool(resource $stream_filter)|
stream_get_contents|Reads remainder of a stream into a string -|string(resource $handle [, int $maxlength = -1 [, int $offset = -1 ]])|
stream_get_filters|Retrieve list of registered filters -|array(void)|
stream_get_line|Gets line from stream resource up to a given delimiter -|string(resource $handle , int $length [, string $ending ])|
stream_get_meta_data|Retrieves header/meta data from streams/file pointers -|array(resource $stream)|
stream_get_transports|Retrieve list of registered socket transports -|array(void)|
stream_get_wrappers|Retrieve list of registered streams -|array(void)|
stream_is_local|Checks if a stream is a local stream -|bool(mixed $stream_or_url)|
stream_register_wrapper|Alias of stream_wrapper_register() -||
stream_resolve_include_path|    Resolve filename against the include path    -|string(string $filename)|
stream_select|Runs the equivalent of the select() system call on the given    arrays of streams with a timeout specified by tv_sec and tv_usec  -|int(array &$read , array &$write , array &$except , int $tv_sec [, int $tv_usec = 0 ])|
stream_set_blocking|Set blocking/non-blocking mode on a stream -|bool(resource $stream , int $mode)|
stream_set_read_buffer|Set read file buffering on the given stream -|int(resource $stream , int $buffer)|
stream_set_timeout|Set timeout period on a stream -|bool(resource $stream , int $seconds [, int $microseconds = 0 ])|
stream_set_write_buffer|Sets write file buffering on the given stream -|int(resource $stream , int $buffer)|
stream_socket_accept|Accept a connection on a socket created by stream_socket_server() -|resource(resource $server_socket [, float $timeout = ini_get(&quot;default_socket_timeout&quot;) [, string &$peername ]])|
stream_socket_client|Open Internet or Unix domain socket connection -|resource(string $remote_socket [, int &$errno [, string &$errstr [, float $timeout = ini_get(&quot;default_socket_timeout&quot;) [, int $flags = STREAM_CLIENT_CONNECT [, resource $context ]]]]])|
stream_socket_enable_crypto|Turns encryption on/off on an already connected socket -|mixed(resource $stream , bool $enable [, int $crypto_type [, resource $session_stream ]])|
stream_socket_get_name|Retrieve the name of the local or remote sockets -|string(resource $handle , bool $want_peer)|
stream_socket_pair|    Creates a pair of connected, indistinguishable socket streams    -|array(int $domain , int $type , int $protocol)|
stream_socket_recvfrom|Receives data from a socket, connected or not  -|string(resource $socket , int $length [, int $flags = 0 [, string &$address ]])|
stream_socket_sendto|Sends a message to a socket, whether it is connected or not  -|int(resource $socket , string $data [, int $flags = 0 [, string $address ]])|
stream_socket_server|Create an Internet or Unix domain server socket -|resource(string $local_socket [, int &$errno [, string &$errstr [, int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN [, resource $context ]]]])|
stream_socket_shutdown|Shutdown a full-duplex connection -|bool(resource $stream , int $how)|
stream_supports_lock|Tells whether the stream supports locking. -|bool(resource $stream)|
stream_wrapper_register|Register a URL wrapper implemented as a PHP class -|bool(string $protocol , string $classname [, int $flags = 0 ])|
stream_wrapper_restore|Restores a previously unregistered built-in wrapper -|bool(string $protocol)|
stream_wrapper_unregister|Unregister a URL wrapper -|bool(string $protocol)|
strftime|Format a local time/date according to locale settings -|string(string $format [, int $timestamp = time() ])|
strip_tags|Strip HTML and PHP tags from a string -|string(string $str [, string $allowable_tags ])|
stripcslashes|Un-quote string quoted with addcslashes() -|string(string $str)|
stripos|Find position of first occurrence of a case-insensitive string -|int(string $haystack , string $needle [, int $offset = 0 ])|
stripslashes|Un-quotes a quoted string -|string(string $str)|
stristr|Case-insensitive strstr() -|string(string $haystack , mixed $needle [, bool $before_needle = false ])|
strlen|Get string length -|int(string $string)|
strnatcasecmp|Case insensitive string comparisons using a &quot;natural order&quot; algorithm -|int(string $str1 , string $str2)|
strnatcmp|String comparisons using a &quot;natural order&quot; algorithm -|int(string $str1 , string $str2)|
strncasecmp|Binary safe case-insensitive string comparison of the first n characters -|int(string $str1 , string $str2 , int $len)|
strncmp|Binary safe string comparison of the first n characters -|int(string $str1 , string $str2 , int $len)|
strpbrk|Search a string for any of a set of characters -|string(string $haystack , string $char_list)|
strpos|Find position of first occurrence of a string -|int(string $haystack , mixed $needle [, int $offset = 0 ])|
strptime|      Parse a time/date generated with strftime()      -|array(string $date , string $format)|
strrchr|Find the last occurrence of a character in a string -|string(string $haystack , mixed $needle)|
strrev|Reverse a string -|string(string $string)|
strripos|Find position of last occurrence of a case-insensitive string in a string -|int(string $haystack , string $needle [, int $offset = 0 ])|
strrpos|Find the position of the last occurrence of a substring in a string -|int(string $haystack , string $needle [, int $offset = 0 ])|
strspn|    Finds the length of the initial segment of a string consisting    entirely of characters contained within a given mask.    -|int(string $subject , string $mask [, int $start [, int $length ]])|
strstr|Find first occurrence of a string -|string(string $haystack , mixed $needle [, bool $before_needle = false ])|
strtok|Tokenize string -|string(string $str , string $token)|
strtolower|Make a string lowercase -|string(string $str)|
strtotime|Parse about any English textual datetime description into a Unix timestamp -|int(string $time [, int $now ])|
strtoupper|Make a string uppercase -|string(string $string)|
strtr|Translate characters or replace substrings -|string(string $str , string $from , string $to)|
strval|Get string value of a variable -|string(mixed $var)|
substr|Return part of a string -|string(string $string , int $start [, int $length ])|
substr_compare|Binary safe comparison of two strings from an offset, up to length characters -|int(string $main_str , string $str , int $offset [, int $length [, bool $case_insensitivity = false ]])|
substr_count|Count the number of substring occurrences -|int(string $haystack , string $needle [, int $offset = 0 [, int $length ]])|
substr_replace|Replace text within a portion of a string -|mixed(mixed $string , mixed $replacement , mixed $start [, mixed $length ])|
sybase_affected_rows|Gets number of affected rows in last query -|int([ resource $link_identifier ])|
sybase_close|Closes a Sybase connection -|bool([ resource $link_identifier ])|
sybase_connect|Opens a Sybase server connection -|resource([ string $servername [, string $username [, string $password [, string $charset [, string $appname [, bool $new = false ]]]]]])|
sybase_data_seek|Moves internal row pointer -|bool(resource $result_identifier , int $row_number)|
sybase_deadlock_retry_count|Sets the deadlock retry count -|void(int $retry_count)|
sybase_fetch_array|Fetch row as array -|array(resource $result)|
sybase_fetch_assoc|Fetch a result row as an associative array -|array(resource $result)|
sybase_fetch_field|Get field information from a result -|object(resource $result [, int $field_offset = -1 ])|
sybase_fetch_object|Fetch a row as an object -|object(resource $result [, mixed $object ])|
sybase_fetch_row|Get a result row as an enumerated array -|array(resource $result)|
sybase_field_seek|Sets field offset -|bool(resource $result , int $field_offset)|
sybase_free_result|Frees result memory -|bool(resource $result)|
sybase_get_last_message|Returns the last message from the server -|string(void)|
sybase_min_client_severity|Sets minimum client severity -|void(int $severity)|
sybase_min_server_severity|Sets minimum server severity -|void(int $severity)|
sybase_num_fields|Gets the number of fields in a result set -|int(resource $result)|
sybase_num_rows|Get number of rows in a result set -|int(resource $result)|
sybase_pconnect|Open persistent Sybase connection -|resource([ string $servername [, string $username [, string $password [, string $charset [, string $appname ]]]]])|
sybase_query|Sends a Sybase query -|mixed(string $query [, resource $link_identifier ])|
sybase_result|Get result data -|string(resource $result , int $row , mixed $field)|
sybase_select_db|Selects a Sybase database -|bool(string $database_name [, resource $link_identifier ])|
sybase_set_message_handler|Sets the handler called when a server message is raised -|bool(callback $handler [, resource $link_identifier ])|
sybase_unbuffered_query|Send a Sybase query and do not block -|resource(string $query , resource $link_identifier [, bool $store_result ])|
symlink|Creates a symbolic link -|bool(string $target , string $link)|
sys_get_temp_dir|Returns directory path used for temporary files -|string(void)|
sys_getloadavg|Gets system load average -|array(void)|
syslog|Generate a system log message -|bool(int $priority , string $message)|
system|Execute an external program and display the output -|string(string $command [, int &$return_var ])|
tan|Tangent -|float(float $arg)|
tanh|Hyperbolic tangent -|float(float $arg)|
tempnam|Create file with unique file name -|string(string $dir , string $prefix)|
textdomain|Sets the default domain -|string(string $text_domain)|
time|Return current Unix timestamp -|int(void)|
time_nanosleep|Delay for a number of seconds and nanoseconds -|mixed(int $seconds , int $nanoseconds)|
time_sleep_until|    Make the script sleep until the specified time    -|bool(float $timestamp)|
timezone_abbreviations_list|Alias of  DateTimeZone::listAbbreviations() -||
timezone_identifiers_list|Alias of  DateTimeZone::listIdentifiers() -||
timezone_location_get|Alias of  DateTimeZone::getLocation() -||
timezone_name_from_abbr|Returns the timezone name from abbreviation -|string(string $abbr [, int $gmtOffset = -1 [, int $isdst = -1 ]])|
timezone_name_get|Alias of  DateTimeZone::getName() -||
timezone_offset_get|Alias of  DateTimeZone::getOffset() -||
timezone_open|Alias of  DateTimeZone::__construct() -||
timezone_transitions_get|Alias of  DateTimeZone::getTransitions() -||
timezone_version_get|    Gets the version of the timezonedb    -|string(void)|
tmpfile|Creates a temporary file -|resource(void)|
token_get_all|Split given source into PHP tokens -|array(string $source)|
token_name|Get the symbolic name of a given PHP token -|string(int $token)|
touch|Sets access and modification time of file -|bool(string $filename [, int $time = time() [, int $atime ]])|
trigger_error|Generates a user-level error/warning/notice message -|bool(string $error_msg [, int $error_type = E_USER_NOTICE ])|
trim|Strip whitespace (or other characters) from the beginning and end of a string -|string(string $str [, string $charlist ])|
uasort|Sort an array with a user-defined comparison function and maintain index association -|bool(array &$array , callback $cmp_function)|
ucfirst|Make a string&#039;s first character uppercase -|string(string $str)|
ucwords|Uppercase the first character of each word in a string -|string(string $str)|
uksort|Sort an array by keys using a user-defined comparison function -|bool(array &$array , callback $cmp_function)|
umask|Changes the current umask -|int([ int $mask ])|
uniqid|Generate a unique ID -|string([ string $prefix = &quot;&quot; [, bool $more_entropy = false ]])|
unixtojd|Convert Unix timestamp to Julian Day -|int([ int $timestamp = time() ])|
unlink|Deletes a file -|bool(string $filename [, resource $context ])|
unpack|Unpack data from binary string -|array(string $format , string $data)|
unregister_tick_function|De-register a function for execution on each tick -|void(string $function_name)|
unserialize|    Creates a PHP value from a stored representation    -|mixed(string $str)|
urldecode|Decodes URL-encoded string -|string(string $str)|
urlencode|URL-encodes string -|string(string $str)|
use_soap_error_handler|Set whether to use the SOAP error handler -|bool([ bool $handler = true ])|
user_error|Alias of trigger_error() -||
usleep|Delay execution in microseconds -|void(int $micro_seconds)|
usort|Sort an array by values using a user-defined comparison function -|bool(array &$array , callback $cmp_function)|
utf8_decode|    Converts a string with ISO-8859-1 characters encoded with UTF-8    to single-byte ISO-8859-1    -|string(string $data)|
utf8_encode|Encodes an ISO-8859-1 string to UTF-8 -|string(string $data)|
var_dump|Dumps information about a variable -|void(mixed $expression [, mixed $... ])|
var_export|Outputs or returns a parsable string representation of a variable -|mixed(mixed $expression [, bool $return = false ])|
version_compare|Compares two &quot;PHP-standardized&quot; version number strings -|mixed(string $version1 , string $version2 [, string $operator ])|
vfprintf|Write a formatted string to a stream -|int(resource $handle , string $format , array $args)|
vprintf|Output a formatted string -|int(string $format , array $args)|
vsprintf|Return a formatted string -|string(string $format , array $args)|
wddx_add_vars|Add variables to a WDDX packet with the specified ID -|bool(resource $packet_id , mixed $var_name [, mixed $... ])|
wddx_deserialize|Unserializes a WDDX packet -|mixed(string $packet)|
wddx_packet_end|Ends a WDDX packet with the specified ID -|string(resource $packet_id)|
wddx_packet_start|Starts a new WDDX packet with structure inside it -|resource([ string $comment ])|
wddx_serialize_value|Serialize a single value into a WDDX packet -|string(mixed $var [, string $comment ])|
wddx_serialize_vars|Serialize variables into a WDDX packet -|string(mixed $var_name [, mixed $... ])|
wordwrap|Wraps a string to a given number of characters -|string(string $str [, int $width = 75 [, string $break = &quot;\n&quot; [, bool $cut = false ]]])|
xml_error_string|Get XML parser error string -|string(int $code)|
xml_get_current_byte_index|Get current byte index for an XML parser -|int(resource $parser)|
xml_get_current_column_number|    Get current column number for an XML parser    -|int(resource $parser)|
xml_get_current_line_number|Get current line number for an XML parser -|int(resource $parser)|
xml_get_error_code|Get XML parser error code -|int(resource $parser)|
xml_parse|Start parsing an XML document -|int(resource $parser , string $data [, bool $is_final = false ])|
xml_parse_into_struct|Parse XML data into an array structure -|int(resource $parser , string $data , array &$values [, array &$index ])|
xml_parser_create|Create an XML parser -|resource([ string $encoding ])|
xml_parser_create_ns|Create an XML parser with namespace support -|resource([ string $encoding [, string $separator = &#039;:&#039; ]])|
xml_parser_free|Free an XML parser -|bool(resource $parser)|
xml_parser_get_option|Get options from an XML parser -|mixed(resource $parser , int $option)|
xml_parser_set_option|Set options in an XML parser -|bool(resource $parser , int $option , mixed $value)|
xml_set_character_data_handler|Set up character data handler -|bool(resource $parser , callback $handler)|
xml_set_default_handler|Set up default handler -|bool(resource $parser , callback $handler)|
xml_set_element_handler|Set up start and end element handlers -|bool(resource $parser , callback $start_element_handler , callback $end_element_handler)|
xml_set_end_namespace_decl_handler|Set up end namespace declaration handler -|bool(resource $parser , callback $handler)|
xml_set_external_entity_ref_handler|Set up external entity reference handler -|bool(resource $parser , callback $handler)|
xml_set_notation_decl_handler|Set up notation declaration handler -|bool(resource $parser , callback $handler)|
xml_set_object|Use XML Parser within an object -|bool(resource $parser , object &$object)|
xml_set_processing_instruction_handler|    Set up processing instruction (PI) handler    -|bool(resource $parser , callback $handler)|
xml_set_start_namespace_decl_handler|    Set up start namespace declaration handler    -|bool(resource $parser , callback $handler)|
xml_set_unparsed_entity_decl_handler|    Set up unparsed entity declaration handler    -|bool(resource $parser , callback $handler)|
zend_logo_guid|Gets the Zend guid -|string(void)|
zend_version|Gets the version of the current Zend engine -|string(void)|
zip_close|Close a ZIP file archive -|void(resource $zip)|
zip_entry_close|Close a directory entry -|bool(resource $zip_entry)|
zip_entry_compressedsize|Retrieve the compressed size of a directory entry -|int(resource $zip_entry)|
zip_entry_compressionmethod|Retrieve the compression method of a directory entry -|string(resource $zip_entry)|
zip_entry_filesize|Retrieve the actual file size of a directory entry -|int(resource $zip_entry)|
zip_entry_name|Retrieve the name of a directory entry -|string(resource $zip_entry)|
zip_entry_open|Open a directory entry for reading -|bool(resource $zip , resource $zip_entry [, string $mode ])|
zip_entry_read|Read from an open directory entry -|string(resource $zip_entry [, int $length ])|
zip_open|Open a ZIP file archive -|mixed(string $filename)|
zip_read|Read next entry in a ZIP file archive -|mixed(resource $zip)|
zlib_get_coding_type|Returns the coding type used for output compression -|string(void)|
